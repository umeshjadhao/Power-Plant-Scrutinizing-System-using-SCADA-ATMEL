
Power_Plant_AVR.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001110  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000001b6  00800060  00001110  000011a4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000090  00800216  00800216  0000135a  2**0
                  ALLOC
  3 .debug_aranges 00000120  00000000  00000000  0000135a  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 00000243  00000000  00000000  0000147a  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001917  00000000  00000000  000016bd  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000d13  00000000  00000000  00002fd4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000f29  00000000  00000000  00003ce7  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000001e0  00000000  00000000  00004c10  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003cb  00000000  00000000  00004df0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000006dd  00000000  00000000  000051bb  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000098  00000000  00000000  00005898  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d4 e0       	ldi	r29, 0x04	; 4
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	12 e0       	ldi	r17, 0x02	; 2
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e0 e1       	ldi	r30, 0x10	; 16
      68:	f1 e1       	ldi	r31, 0x11	; 17
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a6 31       	cpi	r26, 0x16	; 22
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
      76:	12 e0       	ldi	r17, 0x02	; 2
      78:	a6 e1       	ldi	r26, 0x16	; 22
      7a:	b2 e0       	ldi	r27, 0x02	; 2
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a6 3a       	cpi	r26, 0xA6	; 166
      82:	b1 07       	cpc	r27, r17
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <main>
      8a:	0c 94 86 08 	jmp	0x110c	; 0x110c <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <delayms>:
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
      92:	20 ea       	ldi	r18, 0xA0	; 160
      94:	3f e0       	ldi	r19, 0x0F	; 15
      96:	04 c0       	rjmp	.+8      	; 0xa0 <delayms+0xe>
      98:	f9 01       	movw	r30, r18
      9a:	31 97       	sbiw	r30, 0x01	; 1
      9c:	f1 f7       	brne	.-4      	; 0x9a <delayms+0x8>
void delayms(uint16_t millis)              /*Delay Function*/
{
	while(millis)
	{
		_delay_ms(1);
		millis--;
      9e:	01 97       	sbiw	r24, 0x01	; 1
                 // Display String
void delayms(uint16_t millis);

void delayms(uint16_t millis)              /*Delay Function*/
{
	while(millis)
      a0:	00 97       	sbiw	r24, 0x00	; 0
      a2:	d1 f7       	brne	.-12     	; 0x98 <delayms+0x6>
	{
		_delay_ms(1);
		millis--;
	}
}
      a4:	08 95       	ret

000000a6 <lcdcmd>:


	void lcdcmd(unsigned char value)
	{
		PORTC=value;             /*Send values to PortC*/
      a6:	85 bb       	out	0x15, r24	; 21
		PORTB=0x01;             /*RS=0,RW=0,En=1   (001)*/
      a8:	81 e0       	ldi	r24, 0x01	; 1
      aa:	88 bb       	out	0x18, r24	; 24
      ac:	80 ea       	ldi	r24, 0xA0	; 160
      ae:	9f e0       	ldi	r25, 0x0F	; 15
      b0:	01 97       	sbiw	r24, 0x01	; 1
      b2:	f1 f7       	brne	.-4      	; 0xb0 <lcdcmd+0xa>
		delayms(1);
		PORTB=0x00;				/*RS=0,RW=0,EN=0   (000)*/
      b4:	18 ba       	out	0x18, r1	; 24
		return;
	}
      b6:	08 95       	ret

000000b8 <lcddata>:

	void lcddata(unsigned char value)
	{
		PORTC=value;				
      b8:	85 bb       	out	0x15, r24	; 21
		PORTB=0x05;				/*RS=1, RW=0,EN=1   (101)*/
      ba:	85 e0       	ldi	r24, 0x05	; 5
      bc:	88 bb       	out	0x18, r24	; 24
      be:	80 ea       	ldi	r24, 0xA0	; 160
      c0:	9f e0       	ldi	r25, 0x0F	; 15
      c2:	01 97       	sbiw	r24, 0x01	; 1
      c4:	f1 f7       	brne	.-4      	; 0xc2 <lcddata+0xa>
		delayms(1);
		PORTB=0x04;				/*RS=1, RW=0,EN=0    (100)*/
      c6:	84 e0       	ldi	r24, 0x04	; 4
      c8:	88 bb       	out	0x18, r24	; 24
		return ;
	} 
      ca:	08 95       	ret

000000cc <lcd_str>:


	void lcd_str(const char *s)
	{
      cc:	cf 93       	push	r28
      ce:	df 93       	push	r29
      d0:	ec 01       	movw	r28, r24
      d2:	03 c0       	rjmp	.+6      	; 0xda <lcd_str+0xe>
		while(*s)
		{
			lcddata(*s++);
      d4:	21 96       	adiw	r28, 0x01	; 1
      d6:	0e 94 5c 00 	call	0xb8	; 0xb8 <lcddata>
	} 


	void lcd_str(const char *s)
	{
		while(*s)
      da:	88 81       	ld	r24, Y
      dc:	88 23       	and	r24, r24
      de:	d1 f7       	brne	.-12     	; 0xd4 <lcd_str+0x8>
		{
			lcddata(*s++);
		}
			return;
	}
      e0:	df 91       	pop	r29
      e2:	cf 91       	pop	r28
      e4:	08 95       	ret

000000e6 <lcd_init>:

	void lcd_init(void)
	{
      e6:	0f 93       	push	r16
      e8:	1f 93       	push	r17
	
		lcdcmd(0x38);         /*2 lines and 5x2 matrix */
      ea:	88 e3       	ldi	r24, 0x38	; 56
      ec:	0e 94 53 00 	call	0xa6	; 0xa6 <lcdcmd>
      f0:	00 ea       	ldi	r16, 0xA0	; 160
      f2:	1f e0       	ldi	r17, 0x0F	; 15
      f4:	c8 01       	movw	r24, r16
      f6:	01 97       	sbiw	r24, 0x01	; 1
      f8:	f1 f7       	brne	.-4      	; 0xf6 <lcd_init+0x10>
		delayms(1);
	
		lcdcmd(0x0C);         /*Display on Cursor Blinking*/
      fa:	8c e0       	ldi	r24, 0x0C	; 12
      fc:	0e 94 53 00 	call	0xa6	; 0xa6 <lcdcmd>
     100:	c8 01       	movw	r24, r16
     102:	01 97       	sbiw	r24, 0x01	; 1
     104:	f1 f7       	brne	.-4      	; 0x102 <lcd_init+0x1c>
		delayms(1);

	
		lcdcmd(0x01);         /*Clear Display Screen*/
     106:	81 e0       	ldi	r24, 0x01	; 1
     108:	0e 94 53 00 	call	0xa6	; 0xa6 <lcdcmd>
     10c:	c8 01       	movw	r24, r16
     10e:	01 97       	sbiw	r24, 0x01	; 1
     110:	f1 f7       	brne	.-4      	; 0x10e <lcd_init+0x28>
		delayms(1);

	
		lcdcmd(0x06);         /*Increement Cursor(Shift Cursor to right)*/
     112:	86 e0       	ldi	r24, 0x06	; 6
     114:	0e 94 53 00 	call	0xa6	; 0xa6 <lcdcmd>
     118:	c8 01       	movw	r24, r16
     11a:	01 97       	sbiw	r24, 0x01	; 1
     11c:	f1 f7       	brne	.-4      	; 0x11a <lcd_init+0x34>
		delayms(1);

	
		lcdcmd(0x80);         /*Force Cursor to beginning of Line*/
     11e:	80 e8       	ldi	r24, 0x80	; 128
     120:	0e 94 53 00 	call	0xa6	; 0xa6 <lcdcmd>
     124:	c8 01       	movw	r24, r16
     126:	01 97       	sbiw	r24, 0x01	; 1
     128:	f1 f7       	brne	.-4      	; 0x126 <lcd_init+0x40>
		delayms(1);         /* Put C0 to force cursor to second line*/
	}
     12a:	1f 91       	pop	r17
     12c:	0f 91       	pop	r16
     12e:	08 95       	ret

00000130 <LCDWriteInt>:

void LCDWriteInt(int val,unsigned int field_length)
{	
     130:	ef 92       	push	r14
     132:	ff 92       	push	r15
     134:	0f 93       	push	r16
     136:	1f 93       	push	r17
     138:	df 93       	push	r29
     13a:	cf 93       	push	r28
     13c:	00 d0       	rcall	.+0      	; 0x13e <LCDWriteInt+0xe>
     13e:	00 d0       	rcall	.+0      	; 0x140 <LCDWriteInt+0x10>
     140:	0f 92       	push	r0
     142:	cd b7       	in	r28, 0x3d	; 61
     144:	de b7       	in	r29, 0x3e	; 62
     146:	9c 01       	movw	r18, r24
     148:	8b 01       	movw	r16, r22
	
		
	char str[5]={0,0,0,0,0};
     14a:	fe 01       	movw	r30, r28
     14c:	31 96       	adiw	r30, 0x01	; 1
     14e:	85 e0       	ldi	r24, 0x05	; 5
     150:	df 01       	movw	r26, r30
     152:	1d 92       	st	X+, r1
     154:	8a 95       	dec	r24
     156:	e9 f7       	brne	.-6      	; 0x152 <LCDWriteInt+0x22>
     158:	fe 01       	movw	r30, r28
     15a:	35 96       	adiw	r30, 0x05	; 5
     15c:	0d c0       	rjmp	.+26     	; 0x178 <LCDWriteInt+0x48>
	int i=4,j=0;
	while(val)
	{
	str[i]=val%10;
     15e:	c9 01       	movw	r24, r18
     160:	6a e0       	ldi	r22, 0x0A	; 10
     162:	70 e0       	ldi	r23, 0x00	; 0
     164:	0e 94 87 05 	call	0xb0e	; 0xb0e <__divmodhi4>
     168:	80 83       	st	Z, r24
	val=val/10;
     16a:	c9 01       	movw	r24, r18
     16c:	6a e0       	ldi	r22, 0x0A	; 10
     16e:	70 e0       	ldi	r23, 0x00	; 0
     170:	0e 94 87 05 	call	0xb0e	; 0xb0e <__divmodhi4>
     174:	9b 01       	movw	r18, r22
     176:	31 97       	sbiw	r30, 0x01	; 1
{	
	
		
	char str[5]={0,0,0,0,0};
	int i=4,j=0;
	while(val)
     178:	21 15       	cp	r18, r1
     17a:	31 05       	cpc	r19, r1
     17c:	81 f7       	brne	.-32     	; 0x15e <LCDWriteInt+0x2e>
	{
	str[i]=val%10;
	val=val/10;
	i--;
	}
	if(field_length==-1)
     17e:	bf ef       	ldi	r27, 0xFF	; 255
     180:	0f 3f       	cpi	r16, 0xFF	; 255
     182:	1b 07       	cpc	r17, r27
     184:	79 f4       	brne	.+30     	; 0x1a4 <LCDWriteInt+0x74>
     186:	20 e0       	ldi	r18, 0x00	; 0
     188:	30 e0       	ldi	r19, 0x00	; 0
		while(str[j]==0) j++;
     18a:	ae 01       	movw	r20, r28
     18c:	4f 5f       	subi	r20, 0xFF	; 255
     18e:	5f 4f       	sbci	r21, 0xFF	; 255
     190:	02 c0       	rjmp	.+4      	; 0x196 <LCDWriteInt+0x66>
     192:	2f 5f       	subi	r18, 0xFF	; 255
     194:	3f 4f       	sbci	r19, 0xFF	; 255
     196:	fa 01       	movw	r30, r20
     198:	e2 0f       	add	r30, r18
     19a:	f3 1f       	adc	r31, r19
     19c:	80 81       	ld	r24, Z
     19e:	88 23       	and	r24, r24
     1a0:	c1 f3       	breq	.-16     	; 0x192 <LCDWriteInt+0x62>
     1a2:	04 c0       	rjmp	.+8      	; 0x1ac <LCDWriteInt+0x7c>
	else
		j=5-field_length;
     1a4:	25 e0       	ldi	r18, 0x05	; 5
     1a6:	30 e0       	ldi	r19, 0x00	; 0
     1a8:	20 1b       	sub	r18, r16
     1aa:	31 0b       	sbc	r19, r17
     1ac:	7e 01       	movw	r14, r28
     1ae:	08 94       	sec
     1b0:	e1 1c       	adc	r14, r1
     1b2:	f1 1c       	adc	r15, r1
     1b4:	e2 0e       	add	r14, r18
     1b6:	f3 1e       	adc	r15, r19
     1b8:	89 01       	movw	r16, r18
     1ba:	08 c0       	rjmp	.+16     	; 0x1cc <LCDWriteInt+0x9c>

	if(val<0) lcddata('-');
	for(i=j;i<5;i++)
	{
	lcddata(48+str[i]);
     1bc:	f7 01       	movw	r30, r14
     1be:	81 91       	ld	r24, Z+
     1c0:	7f 01       	movw	r14, r30
     1c2:	80 5d       	subi	r24, 0xD0	; 208
     1c4:	0e 94 5c 00 	call	0xb8	; 0xb8 <lcddata>
		while(str[j]==0) j++;
	else
		j=5-field_length;

	if(val<0) lcddata('-');
	for(i=j;i<5;i++)
     1c8:	0f 5f       	subi	r16, 0xFF	; 255
     1ca:	1f 4f       	sbci	r17, 0xFF	; 255
     1cc:	05 30       	cpi	r16, 0x05	; 5
     1ce:	11 05       	cpc	r17, r1
     1d0:	ac f3       	brlt	.-22     	; 0x1bc <LCDWriteInt+0x8c>
	{
	lcddata(48+str[i]);
	}
	
}
     1d2:	0f 90       	pop	r0
     1d4:	0f 90       	pop	r0
     1d6:	0f 90       	pop	r0
     1d8:	0f 90       	pop	r0
     1da:	0f 90       	pop	r0
     1dc:	cf 91       	pop	r28
     1de:	df 91       	pop	r29
     1e0:	1f 91       	pop	r17
     1e2:	0f 91       	pop	r16
     1e4:	ff 90       	pop	r15
     1e6:	ef 90       	pop	r14
     1e8:	08 95       	ret

000001ea <buzzer_on>:
unsigned char data_1[20],data_2[20],data_3[100];
int result_1,result_2;

void buzzer_on()
{
	PORTB |= 0x10;
     1ea:	c4 9a       	sbi	0x18, 4	; 24
}
     1ec:	08 95       	ret

000001ee <buzzer_off>:
void buzzer_off()
{
	PORTB |= 0x00;
     1ee:	88 b3       	in	r24, 0x18	; 24
     1f0:	88 bb       	out	0x18, r24	; 24
}
     1f2:	08 95       	ret

000001f4 <main>:

int main(void)
{
     1f4:	6f 92       	push	r6
     1f6:	7f 92       	push	r7
     1f8:	8f 92       	push	r8
     1fa:	9f 92       	push	r9
     1fc:	af 92       	push	r10
     1fe:	bf 92       	push	r11
     200:	cf 92       	push	r12
     202:	df 92       	push	r13
     204:	ef 92       	push	r14
     206:	ff 92       	push	r15
     208:	0f 93       	push	r16
     20a:	1f 93       	push	r17
     20c:	cf 93       	push	r28
     20e:	df 93       	push	r29
	
	DDRB=0xFF; DDRC=0xFF;
     210:	8f ef       	ldi	r24, 0xFF	; 255
     212:	87 bb       	out	0x17, r24	; 23
     214:	84 bb       	out	0x14, r24	; 20
	MCUCSR=0x80;             //Disables JTAG and makes C port as I/O port 
     216:	80 e8       	ldi	r24, 0x80	; 128
     218:	84 bf       	out	0x34, r24	; 52
	MCUCSR=0x80;
     21a:	84 bf       	out	0x34, r24	; 52
	lcd_init();
     21c:	0e 94 73 00 	call	0xe6	; 0xe6 <lcd_init>
	USART_Init(12);
     220:	8c e0       	ldi	r24, 0x0C	; 12
     222:	90 e0       	ldi	r25, 0x00	; 0
     224:	0e 94 25 02 	call	0x44a	; 0x44a <USART_Init>
	USART_Txstr("_______________________________________");
     228:	80 e6       	ldi	r24, 0x60	; 96
     22a:	90 e0       	ldi	r25, 0x00	; 0
     22c:	0e 94 35 02 	call	0x46a	; 0x46a <USART_Txstr>
	USART_Transmit(0x0D);
     230:	8d e0       	ldi	r24, 0x0D	; 13
     232:	0e 94 2d 02 	call	0x45a	; 0x45a <USART_Transmit>
	USART_Txstr("  Temperature    Voltage    Frequency " );
     236:	88 e8       	ldi	r24, 0x88	; 136
     238:	90 e0       	ldi	r25, 0x00	; 0
     23a:	0e 94 35 02 	call	0x46a	; 0x46a <USART_Txstr>
	USART_Transmit(0x0D);
     23e:	8d e0       	ldi	r24, 0x0D	; 13
     240:	0e 94 2d 02 	call	0x45a	; 0x45a <USART_Transmit>
	USART_Txstr("      oC           mV            Hz  ");
     244:	8f ea       	ldi	r24, 0xAF	; 175
     246:	90 e0       	ldi	r25, 0x00	; 0
     248:	0e 94 35 02 	call	0x46a	; 0x46a <USART_Txstr>
	USART_Transmit(0x0D);
     24c:	8d e0       	ldi	r24, 0x0D	; 13
     24e:	0e 94 2d 02 	call	0x45a	; 0x45a <USART_Transmit>
	USART_Txstr("_______________________________________");
     252:	80 e6       	ldi	r24, 0x60	; 96
     254:	90 e0       	ldi	r25, 0x00	; 0
     256:	0e 94 35 02 	call	0x46a	; 0x46a <USART_Txstr>
	USART_Transmit(0x0D);
     25a:	8d e0       	ldi	r24, 0x0D	; 13
     25c:	0e 94 2d 02 	call	0x45a	; 0x45a <USART_Transmit>
	{
	
		adc_init(0);		
		result_1=adc_read();
		result_1 = (float)result_1 * 4.8875;
		sprintf(data_1,"V=%dmV",result_1);
     260:	72 e9       	ldi	r23, 0x92	; 146
     262:	c7 2e       	mov	r12, r23
     264:	72 e0       	ldi	r23, 0x02	; 2
     266:	d7 2e       	mov	r13, r23
     268:	65 ed       	ldi	r22, 0xD5	; 213
     26a:	66 2e       	mov	r6, r22
     26c:	60 e0       	ldi	r22, 0x00	; 0
     26e:	76 2e       	mov	r7, r22
		lcdcmd(0x80);
		lcd_str(data_1);
		adc_init(1);		
		result_2=adc_read()/2;
		sprintf(data_2,"T= %d C",result_2);
     270:	5e e7       	ldi	r21, 0x7E	; 126
     272:	e5 2e       	mov	r14, r21
     274:	52 e0       	ldi	r21, 0x02	; 2
     276:	f5 2e       	mov	r15, r21
     278:	4c ed       	ldi	r20, 0xDC	; 220
     27a:	84 2e       	mov	r8, r20
     27c:	40 e0       	ldi	r20, 0x00	; 0
     27e:	94 2e       	mov	r9, r20
		lcdcmd(0xC0);		
		lcd_str(data_2);
		lcdcmd(0x8A);		
		lcd_str("F=50Hz");
		sprintf(data_3,"    %d            %d          50 ",result_2,result_1);
     280:	06 e1       	ldi	r16, 0x16	; 22
     282:	12 e0       	ldi	r17, 0x02	; 2
     284:	3b ee       	ldi	r19, 0xEB	; 235
     286:	a3 2e       	mov	r10, r19
     288:	30 e0       	ldi	r19, 0x00	; 0
     28a:	b3 2e       	mov	r11, r19
     28c:	c0 e9       	ldi	r28, 0x90	; 144
     28e:	d1 e0       	ldi	r29, 0x01	; 1
	USART_Txstr("_______________________________________");
	USART_Transmit(0x0D);
	while(1)
	{
	
		adc_init(0);		
     290:	80 e0       	ldi	r24, 0x00	; 0
     292:	0e 94 1e 02 	call	0x43c	; 0x43c <adc_init>
		result_1=adc_read();
     296:	0e 94 03 02 	call	0x406	; 0x406 <adc_read>
		result_1 = (float)result_1 * 4.8875;
     29a:	aa 27       	eor	r26, r26
     29c:	97 fd       	sbrc	r25, 7
     29e:	a0 95       	com	r26
     2a0:	ba 2f       	mov	r27, r26
     2a2:	bc 01       	movw	r22, r24
     2a4:	cd 01       	movw	r24, r26
     2a6:	0e 94 39 03 	call	0x672	; 0x672 <__floatsisf>
     2aa:	26 e6       	ldi	r18, 0x66	; 102
     2ac:	36 e6       	ldi	r19, 0x66	; 102
     2ae:	4c e9       	ldi	r20, 0x9C	; 156
     2b0:	50 e4       	ldi	r21, 0x40	; 64
     2b2:	0e 94 3f 02 	call	0x47e	; 0x47e <__mulsf3>
     2b6:	0e 94 97 03 	call	0x72e	; 0x72e <__fixsfsi>
     2ba:	70 93 7d 02 	sts	0x027D, r23
     2be:	60 93 7c 02 	sts	0x027C, r22
		sprintf(data_1,"V=%dmV",result_1);
     2c2:	00 d0       	rcall	.+0      	; 0x2c4 <main+0xd0>
     2c4:	00 d0       	rcall	.+0      	; 0x2c6 <main+0xd2>
     2c6:	00 d0       	rcall	.+0      	; 0x2c8 <main+0xd4>
     2c8:	ed b7       	in	r30, 0x3d	; 61
     2ca:	fe b7       	in	r31, 0x3e	; 62
     2cc:	31 96       	adiw	r30, 0x01	; 1
     2ce:	ad b7       	in	r26, 0x3d	; 61
     2d0:	be b7       	in	r27, 0x3e	; 62
     2d2:	12 96       	adiw	r26, 0x02	; 2
     2d4:	dc 92       	st	X, r13
     2d6:	ce 92       	st	-X, r12
     2d8:	11 97       	sbiw	r26, 0x01	; 1
     2da:	73 82       	std	Z+3, r7	; 0x03
     2dc:	62 82       	std	Z+2, r6	; 0x02
     2de:	75 83       	std	Z+5, r23	; 0x05
     2e0:	64 83       	std	Z+4, r22	; 0x04
     2e2:	0e 94 e5 05 	call	0xbca	; 0xbca <sprintf>
		lcdcmd(0x80);
     2e6:	8d b7       	in	r24, 0x3d	; 61
     2e8:	9e b7       	in	r25, 0x3e	; 62
     2ea:	06 96       	adiw	r24, 0x06	; 6
     2ec:	0f b6       	in	r0, 0x3f	; 63
     2ee:	f8 94       	cli
     2f0:	9e bf       	out	0x3e, r25	; 62
     2f2:	0f be       	out	0x3f, r0	; 63
     2f4:	8d bf       	out	0x3d, r24	; 61
     2f6:	80 e8       	ldi	r24, 0x80	; 128
     2f8:	0e 94 53 00 	call	0xa6	; 0xa6 <lcdcmd>
		lcd_str(data_1);
     2fc:	c6 01       	movw	r24, r12
     2fe:	0e 94 66 00 	call	0xcc	; 0xcc <lcd_str>
		adc_init(1);		
     302:	81 e0       	ldi	r24, 0x01	; 1
     304:	0e 94 1e 02 	call	0x43c	; 0x43c <adc_init>
		result_2=adc_read()/2;
     308:	0e 94 03 02 	call	0x406	; 0x406 <adc_read>
     30c:	96 95       	lsr	r25
     30e:	87 95       	ror	r24
     310:	90 93 7b 02 	sts	0x027B, r25
     314:	80 93 7a 02 	sts	0x027A, r24
		sprintf(data_2,"T= %d C",result_2);
     318:	00 d0       	rcall	.+0      	; 0x31a <main+0x126>
     31a:	00 d0       	rcall	.+0      	; 0x31c <main+0x128>
     31c:	00 d0       	rcall	.+0      	; 0x31e <main+0x12a>
     31e:	ed b7       	in	r30, 0x3d	; 61
     320:	fe b7       	in	r31, 0x3e	; 62
     322:	31 96       	adiw	r30, 0x01	; 1
     324:	ad b7       	in	r26, 0x3d	; 61
     326:	be b7       	in	r27, 0x3e	; 62
     328:	12 96       	adiw	r26, 0x02	; 2
     32a:	fc 92       	st	X, r15
     32c:	ee 92       	st	-X, r14
     32e:	11 97       	sbiw	r26, 0x01	; 1
     330:	93 82       	std	Z+3, r9	; 0x03
     332:	82 82       	std	Z+2, r8	; 0x02
     334:	95 83       	std	Z+5, r25	; 0x05
     336:	84 83       	std	Z+4, r24	; 0x04
     338:	0e 94 e5 05 	call	0xbca	; 0xbca <sprintf>
		lcdcmd(0xC0);		
     33c:	8d b7       	in	r24, 0x3d	; 61
     33e:	9e b7       	in	r25, 0x3e	; 62
     340:	06 96       	adiw	r24, 0x06	; 6
     342:	0f b6       	in	r0, 0x3f	; 63
     344:	f8 94       	cli
     346:	9e bf       	out	0x3e, r25	; 62
     348:	0f be       	out	0x3f, r0	; 63
     34a:	8d bf       	out	0x3d, r24	; 61
     34c:	80 ec       	ldi	r24, 0xC0	; 192
     34e:	0e 94 53 00 	call	0xa6	; 0xa6 <lcdcmd>
		lcd_str(data_2);
     352:	c7 01       	movw	r24, r14
     354:	0e 94 66 00 	call	0xcc	; 0xcc <lcd_str>
		lcdcmd(0x8A);		
     358:	8a e8       	ldi	r24, 0x8A	; 138
     35a:	0e 94 53 00 	call	0xa6	; 0xa6 <lcdcmd>
		lcd_str("F=50Hz");
     35e:	84 ee       	ldi	r24, 0xE4	; 228
     360:	90 e0       	ldi	r25, 0x00	; 0
     362:	0e 94 66 00 	call	0xcc	; 0xcc <lcd_str>
		sprintf(data_3,"    %d            %d          50 ",result_2,result_1);
     366:	ad b7       	in	r26, 0x3d	; 61
     368:	be b7       	in	r27, 0x3e	; 62
     36a:	18 97       	sbiw	r26, 0x08	; 8
     36c:	0f b6       	in	r0, 0x3f	; 63
     36e:	f8 94       	cli
     370:	be bf       	out	0x3e, r27	; 62
     372:	0f be       	out	0x3f, r0	; 63
     374:	ad bf       	out	0x3d, r26	; 61
     376:	ed b7       	in	r30, 0x3d	; 61
     378:	fe b7       	in	r31, 0x3e	; 62
     37a:	31 96       	adiw	r30, 0x01	; 1
     37c:	12 96       	adiw	r26, 0x02	; 2
     37e:	1c 93       	st	X, r17
     380:	0e 93       	st	-X, r16
     382:	11 97       	sbiw	r26, 0x01	; 1
     384:	b3 82       	std	Z+3, r11	; 0x03
     386:	a2 82       	std	Z+2, r10	; 0x02
     388:	80 91 7a 02 	lds	r24, 0x027A
     38c:	90 91 7b 02 	lds	r25, 0x027B
     390:	95 83       	std	Z+5, r25	; 0x05
     392:	84 83       	std	Z+4, r24	; 0x04
     394:	80 91 7c 02 	lds	r24, 0x027C
     398:	90 91 7d 02 	lds	r25, 0x027D
     39c:	97 83       	std	Z+7, r25	; 0x07
     39e:	86 83       	std	Z+6, r24	; 0x06
     3a0:	0e 94 e5 05 	call	0xbca	; 0xbca <sprintf>
		USART_Transmit(0x0D);
     3a4:	8d b7       	in	r24, 0x3d	; 61
     3a6:	9e b7       	in	r25, 0x3e	; 62
     3a8:	08 96       	adiw	r24, 0x08	; 8
     3aa:	0f b6       	in	r0, 0x3f	; 63
     3ac:	f8 94       	cli
     3ae:	9e bf       	out	0x3e, r25	; 62
     3b0:	0f be       	out	0x3f, r0	; 63
     3b2:	8d bf       	out	0x3d, r24	; 61
     3b4:	8d e0       	ldi	r24, 0x0D	; 13
     3b6:	0e 94 2d 02 	call	0x45a	; 0x45a <USART_Transmit>
	//	USART_Transmit(0x0D);
		USART_Txstr(data_3);
     3ba:	c8 01       	movw	r24, r16
     3bc:	0e 94 35 02 	call	0x46a	; 0x46a <USART_Txstr>
		USART_Transmit(0x0D);
     3c0:	8d e0       	ldi	r24, 0x0D	; 13
     3c2:	0e 94 2d 02 	call	0x45a	; 0x45a <USART_Transmit>
     3c6:	88 ee       	ldi	r24, 0xE8	; 232
     3c8:	93 e0       	ldi	r25, 0x03	; 3
     3ca:	fe 01       	movw	r30, r28
     3cc:	31 97       	sbiw	r30, 0x01	; 1
     3ce:	f1 f7       	brne	.-4      	; 0x3cc <main+0x1d8>
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     3d0:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     3d2:	d9 f7       	brne	.-10     	; 0x3ca <main+0x1d6>
		_delay_ms(100);

		if(result_1>4500 || result_2>40)
     3d4:	80 91 7c 02 	lds	r24, 0x027C
     3d8:	90 91 7d 02 	lds	r25, 0x027D
     3dc:	85 59       	subi	r24, 0x95	; 149
     3de:	91 41       	sbci	r25, 0x11	; 17
     3e0:	3c f4       	brge	.+14     	; 0x3f0 <main+0x1fc>
     3e2:	80 91 7a 02 	lds	r24, 0x027A
     3e6:	90 91 7b 02 	lds	r25, 0x027B
     3ea:	89 97       	sbiw	r24, 0x29	; 41
     3ec:	0c f4       	brge	.+2      	; 0x3f0 <main+0x1fc>
     3ee:	50 cf       	rjmp	.-352    	; 0x290 <main+0x9c>
unsigned char data_1[20],data_2[20],data_3[100];
int result_1,result_2;

void buzzer_on()
{
	PORTB |= 0x10;
     3f0:	c4 9a       	sbi	0x18, 4	; 24
     3f2:	88 e8       	ldi	r24, 0x88	; 136
     3f4:	93 e1       	ldi	r25, 0x13	; 19
     3f6:	fe 01       	movw	r30, r28
     3f8:	31 97       	sbiw	r30, 0x01	; 1
     3fa:	f1 f7       	brne	.-4      	; 0x3f8 <main+0x204>
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     3fc:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     3fe:	d9 f7       	brne	.-10     	; 0x3f6 <main+0x202>
}
void buzzer_off()
{
	PORTB |= 0x00;
     400:	88 b3       	in	r24, 0x18	; 24
     402:	88 bb       	out	0x18, r24	; 24
     404:	45 cf       	rjmp	.-374    	; 0x290 <main+0x9c>

00000406 <adc_read>:
	char i;
	int ADC_temp;
	int ADCr=0;	
 
	
	ADCSRA |= (1 << ADEN);
     406:	37 9a       	sbi	0x06, 7	; 6
		
	ADCSRA |= (1 << ADSC);  
     408:	36 9a       	sbi	0x06, 6	; 6
	
	while(!ADCSRA & 0x10);
     40a:	86 b1       	in	r24, 0x06	; 6
     40c:	60 e0       	ldi	r22, 0x00	; 0
     40e:	20 e0       	ldi	r18, 0x00	; 0
     410:	30 e0       	ldi	r19, 0x00	; 0
	for(i=0;i<8;i++)
	{
		
		ADCSRA |= (1 << ADSC);  
     412:	36 9a       	sbi	0x06, 6	; 6
		while(!ADCSRA & 0x10);
     414:	86 b1       	in	r24, 0x06	; 6

		ADC_temp=ADCL;
     416:	94 b1       	in	r25, 0x04	; 4

		ADC_temp += (ADCH<<8);
     418:	85 b1       	in	r24, 0x05	; 5
		ADCr =ADCr + ADC_temp;
     41a:	58 2f       	mov	r21, r24
     41c:	40 e0       	ldi	r20, 0x00	; 0
     41e:	fa 01       	movw	r30, r20
     420:	e9 0f       	add	r30, r25
     422:	f1 1d       	adc	r31, r1
     424:	2e 0f       	add	r18, r30
     426:	3f 1f       	adc	r19, r31
	ADCSRA |= (1 << ADEN);
		
	ADCSRA |= (1 << ADSC);  
	
	while(!ADCSRA & 0x10);
	for(i=0;i<8;i++)
     428:	6f 5f       	subi	r22, 0xFF	; 255
     42a:	68 30       	cpi	r22, 0x08	; 8
     42c:	91 f7       	brne	.-28     	; 0x412 <adc_read+0xc>
     42e:	83 e0       	ldi	r24, 0x03	; 3
     430:	35 95       	asr	r19
     432:	27 95       	ror	r18
     434:	8a 95       	dec	r24
     436:	e1 f7       	brne	.-8      	; 0x430 <adc_read+0x2a>
		ADCr= ADCr >>3;

	//	ADCSRA|=(1<<ADIF);

		return(ADCr);
}
     438:	c9 01       	movw	r24, r18
     43a:	08 95       	ret

0000043c <adc_init>:


void adc_init(unsigned char input)
{
   
   ADMUX=input;
     43c:	87 b9       	out	0x07, r24	; 7

   ADCSRA |= (1 << ADEN) | (1 << ADPS1) | (1 << ADPS0); // Set ADC prescalar to 128 - 125KHz sample rate @ 16MHz
     43e:	86 b1       	in	r24, 0x06	; 6
     440:	83 68       	ori	r24, 0x83	; 131
     442:	86 b9       	out	0x06, r24	; 6

   // Set ADC reference to AVCC
 
	input=adc_read();
     444:	0e 94 03 02 	call	0x406	; 0x406 <adc_read>
  
}
     448:	08 95       	ret

0000044a <USART_Init>:


void USART_Init( unsigned int ubrr)
{

	UCSRA |=(1<<U2X);
     44a:	59 9a       	sbi	0x0b, 1	; 11
	/* Set baud rate */
	UBRRH = (unsigned char)(ubrr>>8);
     44c:	90 bd       	out	0x20, r25	; 32
	UBRRL = (unsigned char)ubrr;
     44e:	89 b9       	out	0x09, r24	; 9

	/* Enable receiver and transmitter */
	UCSRB = (1<<RXEN)|(1<<TXEN);
     450:	88 e1       	ldi	r24, 0x18	; 24
     452:	8a b9       	out	0x0a, r24	; 10

	/* Set frame format: 8data, 1stop bit */
	UCSRC = (1<<URSEL)|(3<<UCSZ0);
     454:	86 e8       	ldi	r24, 0x86	; 134
     456:	80 bd       	out	0x20, r24	; 32

}
     458:	08 95       	ret

0000045a <USART_Transmit>:

void USART_Transmit( unsigned char data )
{
	/* Wait for empty transmit buffer */
	while ( !( UCSRA & (1<<UDRE)) );
     45a:	5d 9b       	sbis	0x0b, 5	; 11
     45c:	fe cf       	rjmp	.-4      	; 0x45a <USART_Transmit>
	/* Put data into buffer, sends the data */
	UDR = data;
     45e:	8c b9       	out	0x0c, r24	; 12

}
     460:	08 95       	ret

00000462 <USART_Receive>:
unsigned char USART_Receive( void )
{
	/* Wait for data to be received */
	while ( !(UCSRA & (1<<RXC)) )
     462:	5f 9b       	sbis	0x0b, 7	; 11
     464:	fe cf       	rjmp	.-4      	; 0x462 <USART_Receive>
	{}
	/* Get and return received data from buffer */
	return UDR;
     466:	8c b1       	in	r24, 0x0c	; 12
}
     468:	08 95       	ret

0000046a <USART_Txstr>:

void USART_Txstr (char *s) 
{
     46a:	fc 01       	movw	r30, r24
     46c:	04 c0       	rjmp	.+8      	; 0x476 <USART_Txstr+0xc>
}

void USART_Transmit( unsigned char data )
{
	/* Wait for empty transmit buffer */
	while ( !( UCSRA & (1<<UDRE)) );
     46e:	5d 9b       	sbis	0x0b, 5	; 11
     470:	fe cf       	rjmp	.-4      	; 0x46e <USART_Txstr+0x4>
	/* Put data into buffer, sends the data */
	UDR = data;
     472:	8c b9       	out	0x0c, r24	; 12
	//  loop until *s != NULL
	while (*s) 
	{
		USART_Transmit(*s);
		//_delay_ms(200);
		s++;
     474:	31 96       	adiw	r30, 0x01	; 1
}

void USART_Txstr (char *s) 
{
	//  loop until *s != NULL
	while (*s) 
     476:	80 81       	ld	r24, Z
     478:	88 23       	and	r24, r24
     47a:	c9 f7       	brne	.-14     	; 0x46e <USART_Txstr+0x4>
	{
		USART_Transmit(*s);
		//_delay_ms(200);
		s++;
	}
}
     47c:	08 95       	ret

0000047e <__mulsf3>:
     47e:	a0 e2       	ldi	r26, 0x20	; 32
     480:	b0 e0       	ldi	r27, 0x00	; 0
     482:	e5 e4       	ldi	r30, 0x45	; 69
     484:	f2 e0       	ldi	r31, 0x02	; 2
     486:	0c 94 ae 05 	jmp	0xb5c	; 0xb5c <__prologue_saves__>
     48a:	69 83       	std	Y+1, r22	; 0x01
     48c:	7a 83       	std	Y+2, r23	; 0x02
     48e:	8b 83       	std	Y+3, r24	; 0x03
     490:	9c 83       	std	Y+4, r25	; 0x04
     492:	2d 83       	std	Y+5, r18	; 0x05
     494:	3e 83       	std	Y+6, r19	; 0x06
     496:	4f 83       	std	Y+7, r20	; 0x07
     498:	58 87       	std	Y+8, r21	; 0x08
     49a:	ce 01       	movw	r24, r28
     49c:	01 96       	adiw	r24, 0x01	; 1
     49e:	be 01       	movw	r22, r28
     4a0:	67 5f       	subi	r22, 0xF7	; 247
     4a2:	7f 4f       	sbci	r23, 0xFF	; 255
     4a4:	0e 94 0f 05 	call	0xa1e	; 0xa1e <__unpack_f>
     4a8:	ce 01       	movw	r24, r28
     4aa:	05 96       	adiw	r24, 0x05	; 5
     4ac:	be 01       	movw	r22, r28
     4ae:	6f 5e       	subi	r22, 0xEF	; 239
     4b0:	7f 4f       	sbci	r23, 0xFF	; 255
     4b2:	0e 94 0f 05 	call	0xa1e	; 0xa1e <__unpack_f>
     4b6:	99 85       	ldd	r25, Y+9	; 0x09
     4b8:	92 30       	cpi	r25, 0x02	; 2
     4ba:	88 f0       	brcs	.+34     	; 0x4de <__mulsf3+0x60>
     4bc:	89 89       	ldd	r24, Y+17	; 0x11
     4be:	82 30       	cpi	r24, 0x02	; 2
     4c0:	c8 f0       	brcs	.+50     	; 0x4f4 <__mulsf3+0x76>
     4c2:	94 30       	cpi	r25, 0x04	; 4
     4c4:	19 f4       	brne	.+6      	; 0x4cc <__mulsf3+0x4e>
     4c6:	82 30       	cpi	r24, 0x02	; 2
     4c8:	51 f4       	brne	.+20     	; 0x4de <__mulsf3+0x60>
     4ca:	04 c0       	rjmp	.+8      	; 0x4d4 <__mulsf3+0x56>
     4cc:	84 30       	cpi	r24, 0x04	; 4
     4ce:	29 f4       	brne	.+10     	; 0x4da <__mulsf3+0x5c>
     4d0:	92 30       	cpi	r25, 0x02	; 2
     4d2:	81 f4       	brne	.+32     	; 0x4f4 <__mulsf3+0x76>
     4d4:	8d e0       	ldi	r24, 0x0D	; 13
     4d6:	91 e0       	ldi	r25, 0x01	; 1
     4d8:	c6 c0       	rjmp	.+396    	; 0x666 <__mulsf3+0x1e8>
     4da:	92 30       	cpi	r25, 0x02	; 2
     4dc:	49 f4       	brne	.+18     	; 0x4f0 <__mulsf3+0x72>
     4de:	20 e0       	ldi	r18, 0x00	; 0
     4e0:	9a 85       	ldd	r25, Y+10	; 0x0a
     4e2:	8a 89       	ldd	r24, Y+18	; 0x12
     4e4:	98 13       	cpse	r25, r24
     4e6:	21 e0       	ldi	r18, 0x01	; 1
     4e8:	2a 87       	std	Y+10, r18	; 0x0a
     4ea:	ce 01       	movw	r24, r28
     4ec:	09 96       	adiw	r24, 0x09	; 9
     4ee:	bb c0       	rjmp	.+374    	; 0x666 <__mulsf3+0x1e8>
     4f0:	82 30       	cpi	r24, 0x02	; 2
     4f2:	49 f4       	brne	.+18     	; 0x506 <__mulsf3+0x88>
     4f4:	20 e0       	ldi	r18, 0x00	; 0
     4f6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4f8:	8a 89       	ldd	r24, Y+18	; 0x12
     4fa:	98 13       	cpse	r25, r24
     4fc:	21 e0       	ldi	r18, 0x01	; 1
     4fe:	2a 8b       	std	Y+18, r18	; 0x12
     500:	ce 01       	movw	r24, r28
     502:	41 96       	adiw	r24, 0x11	; 17
     504:	b0 c0       	rjmp	.+352    	; 0x666 <__mulsf3+0x1e8>
     506:	2d 84       	ldd	r2, Y+13	; 0x0d
     508:	3e 84       	ldd	r3, Y+14	; 0x0e
     50a:	4f 84       	ldd	r4, Y+15	; 0x0f
     50c:	58 88       	ldd	r5, Y+16	; 0x10
     50e:	6d 88       	ldd	r6, Y+21	; 0x15
     510:	7e 88       	ldd	r7, Y+22	; 0x16
     512:	8f 88       	ldd	r8, Y+23	; 0x17
     514:	98 8c       	ldd	r9, Y+24	; 0x18
     516:	ee 24       	eor	r14, r14
     518:	ff 24       	eor	r15, r15
     51a:	87 01       	movw	r16, r14
     51c:	aa 24       	eor	r10, r10
     51e:	bb 24       	eor	r11, r11
     520:	65 01       	movw	r12, r10
     522:	40 e0       	ldi	r20, 0x00	; 0
     524:	50 e0       	ldi	r21, 0x00	; 0
     526:	60 e0       	ldi	r22, 0x00	; 0
     528:	70 e0       	ldi	r23, 0x00	; 0
     52a:	e0 e0       	ldi	r30, 0x00	; 0
     52c:	f0 e0       	ldi	r31, 0x00	; 0
     52e:	c1 01       	movw	r24, r2
     530:	81 70       	andi	r24, 0x01	; 1
     532:	90 70       	andi	r25, 0x00	; 0
     534:	89 2b       	or	r24, r25
     536:	e9 f0       	breq	.+58     	; 0x572 <__mulsf3+0xf4>
     538:	e6 0c       	add	r14, r6
     53a:	f7 1c       	adc	r15, r7
     53c:	08 1d       	adc	r16, r8
     53e:	19 1d       	adc	r17, r9
     540:	9a 01       	movw	r18, r20
     542:	ab 01       	movw	r20, r22
     544:	2a 0d       	add	r18, r10
     546:	3b 1d       	adc	r19, r11
     548:	4c 1d       	adc	r20, r12
     54a:	5d 1d       	adc	r21, r13
     54c:	80 e0       	ldi	r24, 0x00	; 0
     54e:	90 e0       	ldi	r25, 0x00	; 0
     550:	a0 e0       	ldi	r26, 0x00	; 0
     552:	b0 e0       	ldi	r27, 0x00	; 0
     554:	e6 14       	cp	r14, r6
     556:	f7 04       	cpc	r15, r7
     558:	08 05       	cpc	r16, r8
     55a:	19 05       	cpc	r17, r9
     55c:	20 f4       	brcc	.+8      	; 0x566 <__mulsf3+0xe8>
     55e:	81 e0       	ldi	r24, 0x01	; 1
     560:	90 e0       	ldi	r25, 0x00	; 0
     562:	a0 e0       	ldi	r26, 0x00	; 0
     564:	b0 e0       	ldi	r27, 0x00	; 0
     566:	ba 01       	movw	r22, r20
     568:	a9 01       	movw	r20, r18
     56a:	48 0f       	add	r20, r24
     56c:	59 1f       	adc	r21, r25
     56e:	6a 1f       	adc	r22, r26
     570:	7b 1f       	adc	r23, r27
     572:	aa 0c       	add	r10, r10
     574:	bb 1c       	adc	r11, r11
     576:	cc 1c       	adc	r12, r12
     578:	dd 1c       	adc	r13, r13
     57a:	97 fe       	sbrs	r9, 7
     57c:	08 c0       	rjmp	.+16     	; 0x58e <__mulsf3+0x110>
     57e:	81 e0       	ldi	r24, 0x01	; 1
     580:	90 e0       	ldi	r25, 0x00	; 0
     582:	a0 e0       	ldi	r26, 0x00	; 0
     584:	b0 e0       	ldi	r27, 0x00	; 0
     586:	a8 2a       	or	r10, r24
     588:	b9 2a       	or	r11, r25
     58a:	ca 2a       	or	r12, r26
     58c:	db 2a       	or	r13, r27
     58e:	31 96       	adiw	r30, 0x01	; 1
     590:	e0 32       	cpi	r30, 0x20	; 32
     592:	f1 05       	cpc	r31, r1
     594:	49 f0       	breq	.+18     	; 0x5a8 <__mulsf3+0x12a>
     596:	66 0c       	add	r6, r6
     598:	77 1c       	adc	r7, r7
     59a:	88 1c       	adc	r8, r8
     59c:	99 1c       	adc	r9, r9
     59e:	56 94       	lsr	r5
     5a0:	47 94       	ror	r4
     5a2:	37 94       	ror	r3
     5a4:	27 94       	ror	r2
     5a6:	c3 cf       	rjmp	.-122    	; 0x52e <__mulsf3+0xb0>
     5a8:	fa 85       	ldd	r31, Y+10	; 0x0a
     5aa:	ea 89       	ldd	r30, Y+18	; 0x12
     5ac:	2b 89       	ldd	r18, Y+19	; 0x13
     5ae:	3c 89       	ldd	r19, Y+20	; 0x14
     5b0:	8b 85       	ldd	r24, Y+11	; 0x0b
     5b2:	9c 85       	ldd	r25, Y+12	; 0x0c
     5b4:	28 0f       	add	r18, r24
     5b6:	39 1f       	adc	r19, r25
     5b8:	2e 5f       	subi	r18, 0xFE	; 254
     5ba:	3f 4f       	sbci	r19, 0xFF	; 255
     5bc:	17 c0       	rjmp	.+46     	; 0x5ec <__mulsf3+0x16e>
     5be:	ca 01       	movw	r24, r20
     5c0:	81 70       	andi	r24, 0x01	; 1
     5c2:	90 70       	andi	r25, 0x00	; 0
     5c4:	89 2b       	or	r24, r25
     5c6:	61 f0       	breq	.+24     	; 0x5e0 <__mulsf3+0x162>
     5c8:	16 95       	lsr	r17
     5ca:	07 95       	ror	r16
     5cc:	f7 94       	ror	r15
     5ce:	e7 94       	ror	r14
     5d0:	80 e0       	ldi	r24, 0x00	; 0
     5d2:	90 e0       	ldi	r25, 0x00	; 0
     5d4:	a0 e0       	ldi	r26, 0x00	; 0
     5d6:	b0 e8       	ldi	r27, 0x80	; 128
     5d8:	e8 2a       	or	r14, r24
     5da:	f9 2a       	or	r15, r25
     5dc:	0a 2b       	or	r16, r26
     5de:	1b 2b       	or	r17, r27
     5e0:	76 95       	lsr	r23
     5e2:	67 95       	ror	r22
     5e4:	57 95       	ror	r21
     5e6:	47 95       	ror	r20
     5e8:	2f 5f       	subi	r18, 0xFF	; 255
     5ea:	3f 4f       	sbci	r19, 0xFF	; 255
     5ec:	77 fd       	sbrc	r23, 7
     5ee:	e7 cf       	rjmp	.-50     	; 0x5be <__mulsf3+0x140>
     5f0:	0c c0       	rjmp	.+24     	; 0x60a <__mulsf3+0x18c>
     5f2:	44 0f       	add	r20, r20
     5f4:	55 1f       	adc	r21, r21
     5f6:	66 1f       	adc	r22, r22
     5f8:	77 1f       	adc	r23, r23
     5fa:	17 fd       	sbrc	r17, 7
     5fc:	41 60       	ori	r20, 0x01	; 1
     5fe:	ee 0c       	add	r14, r14
     600:	ff 1c       	adc	r15, r15
     602:	00 1f       	adc	r16, r16
     604:	11 1f       	adc	r17, r17
     606:	21 50       	subi	r18, 0x01	; 1
     608:	30 40       	sbci	r19, 0x00	; 0
     60a:	40 30       	cpi	r20, 0x00	; 0
     60c:	90 e0       	ldi	r25, 0x00	; 0
     60e:	59 07       	cpc	r21, r25
     610:	90 e0       	ldi	r25, 0x00	; 0
     612:	69 07       	cpc	r22, r25
     614:	90 e4       	ldi	r25, 0x40	; 64
     616:	79 07       	cpc	r23, r25
     618:	60 f3       	brcs	.-40     	; 0x5f2 <__mulsf3+0x174>
     61a:	2b 8f       	std	Y+27, r18	; 0x1b
     61c:	3c 8f       	std	Y+28, r19	; 0x1c
     61e:	db 01       	movw	r26, r22
     620:	ca 01       	movw	r24, r20
     622:	8f 77       	andi	r24, 0x7F	; 127
     624:	90 70       	andi	r25, 0x00	; 0
     626:	a0 70       	andi	r26, 0x00	; 0
     628:	b0 70       	andi	r27, 0x00	; 0
     62a:	80 34       	cpi	r24, 0x40	; 64
     62c:	91 05       	cpc	r25, r1
     62e:	a1 05       	cpc	r26, r1
     630:	b1 05       	cpc	r27, r1
     632:	61 f4       	brne	.+24     	; 0x64c <__mulsf3+0x1ce>
     634:	47 fd       	sbrc	r20, 7
     636:	0a c0       	rjmp	.+20     	; 0x64c <__mulsf3+0x1ce>
     638:	e1 14       	cp	r14, r1
     63a:	f1 04       	cpc	r15, r1
     63c:	01 05       	cpc	r16, r1
     63e:	11 05       	cpc	r17, r1
     640:	29 f0       	breq	.+10     	; 0x64c <__mulsf3+0x1ce>
     642:	40 5c       	subi	r20, 0xC0	; 192
     644:	5f 4f       	sbci	r21, 0xFF	; 255
     646:	6f 4f       	sbci	r22, 0xFF	; 255
     648:	7f 4f       	sbci	r23, 0xFF	; 255
     64a:	40 78       	andi	r20, 0x80	; 128
     64c:	1a 8e       	std	Y+26, r1	; 0x1a
     64e:	fe 17       	cp	r31, r30
     650:	11 f0       	breq	.+4      	; 0x656 <__mulsf3+0x1d8>
     652:	81 e0       	ldi	r24, 0x01	; 1
     654:	8a 8f       	std	Y+26, r24	; 0x1a
     656:	4d 8f       	std	Y+29, r20	; 0x1d
     658:	5e 8f       	std	Y+30, r21	; 0x1e
     65a:	6f 8f       	std	Y+31, r22	; 0x1f
     65c:	78 a3       	std	Y+32, r23	; 0x20
     65e:	83 e0       	ldi	r24, 0x03	; 3
     660:	89 8f       	std	Y+25, r24	; 0x19
     662:	ce 01       	movw	r24, r28
     664:	49 96       	adiw	r24, 0x19	; 25
     666:	0e 94 3a 04 	call	0x874	; 0x874 <__pack_f>
     66a:	a0 96       	adiw	r28, 0x20	; 32
     66c:	e2 e1       	ldi	r30, 0x12	; 18
     66e:	0c 94 ca 05 	jmp	0xb94	; 0xb94 <__epilogue_restores__>

00000672 <__floatsisf>:
     672:	a8 e0       	ldi	r26, 0x08	; 8
     674:	b0 e0       	ldi	r27, 0x00	; 0
     676:	ef e3       	ldi	r30, 0x3F	; 63
     678:	f3 e0       	ldi	r31, 0x03	; 3
     67a:	0c 94 b7 05 	jmp	0xb6e	; 0xb6e <__prologue_saves__+0x12>
     67e:	9b 01       	movw	r18, r22
     680:	ac 01       	movw	r20, r24
     682:	83 e0       	ldi	r24, 0x03	; 3
     684:	89 83       	std	Y+1, r24	; 0x01
     686:	da 01       	movw	r26, r20
     688:	c9 01       	movw	r24, r18
     68a:	88 27       	eor	r24, r24
     68c:	b7 fd       	sbrc	r27, 7
     68e:	83 95       	inc	r24
     690:	99 27       	eor	r25, r25
     692:	aa 27       	eor	r26, r26
     694:	bb 27       	eor	r27, r27
     696:	b8 2e       	mov	r11, r24
     698:	21 15       	cp	r18, r1
     69a:	31 05       	cpc	r19, r1
     69c:	41 05       	cpc	r20, r1
     69e:	51 05       	cpc	r21, r1
     6a0:	19 f4       	brne	.+6      	; 0x6a8 <__floatsisf+0x36>
     6a2:	82 e0       	ldi	r24, 0x02	; 2
     6a4:	89 83       	std	Y+1, r24	; 0x01
     6a6:	3a c0       	rjmp	.+116    	; 0x71c <__floatsisf+0xaa>
     6a8:	88 23       	and	r24, r24
     6aa:	a9 f0       	breq	.+42     	; 0x6d6 <__floatsisf+0x64>
     6ac:	20 30       	cpi	r18, 0x00	; 0
     6ae:	80 e0       	ldi	r24, 0x00	; 0
     6b0:	38 07       	cpc	r19, r24
     6b2:	80 e0       	ldi	r24, 0x00	; 0
     6b4:	48 07       	cpc	r20, r24
     6b6:	80 e8       	ldi	r24, 0x80	; 128
     6b8:	58 07       	cpc	r21, r24
     6ba:	29 f4       	brne	.+10     	; 0x6c6 <__floatsisf+0x54>
     6bc:	60 e0       	ldi	r22, 0x00	; 0
     6be:	70 e0       	ldi	r23, 0x00	; 0
     6c0:	80 e0       	ldi	r24, 0x00	; 0
     6c2:	9f ec       	ldi	r25, 0xCF	; 207
     6c4:	30 c0       	rjmp	.+96     	; 0x726 <__floatsisf+0xb4>
     6c6:	ee 24       	eor	r14, r14
     6c8:	ff 24       	eor	r15, r15
     6ca:	87 01       	movw	r16, r14
     6cc:	e2 1a       	sub	r14, r18
     6ce:	f3 0a       	sbc	r15, r19
     6d0:	04 0b       	sbc	r16, r20
     6d2:	15 0b       	sbc	r17, r21
     6d4:	02 c0       	rjmp	.+4      	; 0x6da <__floatsisf+0x68>
     6d6:	79 01       	movw	r14, r18
     6d8:	8a 01       	movw	r16, r20
     6da:	8e e1       	ldi	r24, 0x1E	; 30
     6dc:	c8 2e       	mov	r12, r24
     6de:	d1 2c       	mov	r13, r1
     6e0:	dc 82       	std	Y+4, r13	; 0x04
     6e2:	cb 82       	std	Y+3, r12	; 0x03
     6e4:	ed 82       	std	Y+5, r14	; 0x05
     6e6:	fe 82       	std	Y+6, r15	; 0x06
     6e8:	0f 83       	std	Y+7, r16	; 0x07
     6ea:	18 87       	std	Y+8, r17	; 0x08
     6ec:	c8 01       	movw	r24, r16
     6ee:	b7 01       	movw	r22, r14
     6f0:	0e 94 eb 03 	call	0x7d6	; 0x7d6 <__clzsi2>
     6f4:	01 97       	sbiw	r24, 0x01	; 1
     6f6:	18 16       	cp	r1, r24
     6f8:	19 06       	cpc	r1, r25
     6fa:	84 f4       	brge	.+32     	; 0x71c <__floatsisf+0xaa>
     6fc:	08 2e       	mov	r0, r24
     6fe:	04 c0       	rjmp	.+8      	; 0x708 <__floatsisf+0x96>
     700:	ee 0c       	add	r14, r14
     702:	ff 1c       	adc	r15, r15
     704:	00 1f       	adc	r16, r16
     706:	11 1f       	adc	r17, r17
     708:	0a 94       	dec	r0
     70a:	d2 f7       	brpl	.-12     	; 0x700 <__floatsisf+0x8e>
     70c:	ed 82       	std	Y+5, r14	; 0x05
     70e:	fe 82       	std	Y+6, r15	; 0x06
     710:	0f 83       	std	Y+7, r16	; 0x07
     712:	18 87       	std	Y+8, r17	; 0x08
     714:	c8 1a       	sub	r12, r24
     716:	d9 0a       	sbc	r13, r25
     718:	dc 82       	std	Y+4, r13	; 0x04
     71a:	cb 82       	std	Y+3, r12	; 0x03
     71c:	ba 82       	std	Y+2, r11	; 0x02
     71e:	ce 01       	movw	r24, r28
     720:	01 96       	adiw	r24, 0x01	; 1
     722:	0e 94 3a 04 	call	0x874	; 0x874 <__pack_f>
     726:	28 96       	adiw	r28, 0x08	; 8
     728:	e9 e0       	ldi	r30, 0x09	; 9
     72a:	0c 94 d3 05 	jmp	0xba6	; 0xba6 <__epilogue_restores__+0x12>

0000072e <__fixsfsi>:
     72e:	ac e0       	ldi	r26, 0x0C	; 12
     730:	b0 e0       	ldi	r27, 0x00	; 0
     732:	ed e9       	ldi	r30, 0x9D	; 157
     734:	f3 e0       	ldi	r31, 0x03	; 3
     736:	0c 94 be 05 	jmp	0xb7c	; 0xb7c <__prologue_saves__+0x20>
     73a:	69 83       	std	Y+1, r22	; 0x01
     73c:	7a 83       	std	Y+2, r23	; 0x02
     73e:	8b 83       	std	Y+3, r24	; 0x03
     740:	9c 83       	std	Y+4, r25	; 0x04
     742:	ce 01       	movw	r24, r28
     744:	01 96       	adiw	r24, 0x01	; 1
     746:	be 01       	movw	r22, r28
     748:	6b 5f       	subi	r22, 0xFB	; 251
     74a:	7f 4f       	sbci	r23, 0xFF	; 255
     74c:	0e 94 0f 05 	call	0xa1e	; 0xa1e <__unpack_f>
     750:	8d 81       	ldd	r24, Y+5	; 0x05
     752:	82 30       	cpi	r24, 0x02	; 2
     754:	61 f1       	breq	.+88     	; 0x7ae <__fixsfsi+0x80>
     756:	82 30       	cpi	r24, 0x02	; 2
     758:	50 f1       	brcs	.+84     	; 0x7ae <__fixsfsi+0x80>
     75a:	84 30       	cpi	r24, 0x04	; 4
     75c:	21 f4       	brne	.+8      	; 0x766 <__fixsfsi+0x38>
     75e:	8e 81       	ldd	r24, Y+6	; 0x06
     760:	88 23       	and	r24, r24
     762:	51 f1       	breq	.+84     	; 0x7b8 <__fixsfsi+0x8a>
     764:	2e c0       	rjmp	.+92     	; 0x7c2 <__fixsfsi+0x94>
     766:	2f 81       	ldd	r18, Y+7	; 0x07
     768:	38 85       	ldd	r19, Y+8	; 0x08
     76a:	37 fd       	sbrc	r19, 7
     76c:	20 c0       	rjmp	.+64     	; 0x7ae <__fixsfsi+0x80>
     76e:	6e 81       	ldd	r22, Y+6	; 0x06
     770:	2f 31       	cpi	r18, 0x1F	; 31
     772:	31 05       	cpc	r19, r1
     774:	1c f0       	brlt	.+6      	; 0x77c <__fixsfsi+0x4e>
     776:	66 23       	and	r22, r22
     778:	f9 f0       	breq	.+62     	; 0x7b8 <__fixsfsi+0x8a>
     77a:	23 c0       	rjmp	.+70     	; 0x7c2 <__fixsfsi+0x94>
     77c:	8e e1       	ldi	r24, 0x1E	; 30
     77e:	90 e0       	ldi	r25, 0x00	; 0
     780:	82 1b       	sub	r24, r18
     782:	93 0b       	sbc	r25, r19
     784:	29 85       	ldd	r18, Y+9	; 0x09
     786:	3a 85       	ldd	r19, Y+10	; 0x0a
     788:	4b 85       	ldd	r20, Y+11	; 0x0b
     78a:	5c 85       	ldd	r21, Y+12	; 0x0c
     78c:	04 c0       	rjmp	.+8      	; 0x796 <__fixsfsi+0x68>
     78e:	56 95       	lsr	r21
     790:	47 95       	ror	r20
     792:	37 95       	ror	r19
     794:	27 95       	ror	r18
     796:	8a 95       	dec	r24
     798:	d2 f7       	brpl	.-12     	; 0x78e <__fixsfsi+0x60>
     79a:	66 23       	and	r22, r22
     79c:	b1 f0       	breq	.+44     	; 0x7ca <__fixsfsi+0x9c>
     79e:	50 95       	com	r21
     7a0:	40 95       	com	r20
     7a2:	30 95       	com	r19
     7a4:	21 95       	neg	r18
     7a6:	3f 4f       	sbci	r19, 0xFF	; 255
     7a8:	4f 4f       	sbci	r20, 0xFF	; 255
     7aa:	5f 4f       	sbci	r21, 0xFF	; 255
     7ac:	0e c0       	rjmp	.+28     	; 0x7ca <__fixsfsi+0x9c>
     7ae:	20 e0       	ldi	r18, 0x00	; 0
     7b0:	30 e0       	ldi	r19, 0x00	; 0
     7b2:	40 e0       	ldi	r20, 0x00	; 0
     7b4:	50 e0       	ldi	r21, 0x00	; 0
     7b6:	09 c0       	rjmp	.+18     	; 0x7ca <__fixsfsi+0x9c>
     7b8:	2f ef       	ldi	r18, 0xFF	; 255
     7ba:	3f ef       	ldi	r19, 0xFF	; 255
     7bc:	4f ef       	ldi	r20, 0xFF	; 255
     7be:	5f e7       	ldi	r21, 0x7F	; 127
     7c0:	04 c0       	rjmp	.+8      	; 0x7ca <__fixsfsi+0x9c>
     7c2:	20 e0       	ldi	r18, 0x00	; 0
     7c4:	30 e0       	ldi	r19, 0x00	; 0
     7c6:	40 e0       	ldi	r20, 0x00	; 0
     7c8:	50 e8       	ldi	r21, 0x80	; 128
     7ca:	b9 01       	movw	r22, r18
     7cc:	ca 01       	movw	r24, r20
     7ce:	2c 96       	adiw	r28, 0x0c	; 12
     7d0:	e2 e0       	ldi	r30, 0x02	; 2
     7d2:	0c 94 da 05 	jmp	0xbb4	; 0xbb4 <__epilogue_restores__+0x20>

000007d6 <__clzsi2>:
     7d6:	ef 92       	push	r14
     7d8:	ff 92       	push	r15
     7da:	0f 93       	push	r16
     7dc:	1f 93       	push	r17
     7de:	7b 01       	movw	r14, r22
     7e0:	8c 01       	movw	r16, r24
     7e2:	80 e0       	ldi	r24, 0x00	; 0
     7e4:	e8 16       	cp	r14, r24
     7e6:	80 e0       	ldi	r24, 0x00	; 0
     7e8:	f8 06       	cpc	r15, r24
     7ea:	81 e0       	ldi	r24, 0x01	; 1
     7ec:	08 07       	cpc	r16, r24
     7ee:	80 e0       	ldi	r24, 0x00	; 0
     7f0:	18 07       	cpc	r17, r24
     7f2:	88 f4       	brcc	.+34     	; 0x816 <__clzsi2+0x40>
     7f4:	8f ef       	ldi	r24, 0xFF	; 255
     7f6:	e8 16       	cp	r14, r24
     7f8:	f1 04       	cpc	r15, r1
     7fa:	01 05       	cpc	r16, r1
     7fc:	11 05       	cpc	r17, r1
     7fe:	31 f0       	breq	.+12     	; 0x80c <__clzsi2+0x36>
     800:	28 f0       	brcs	.+10     	; 0x80c <__clzsi2+0x36>
     802:	88 e0       	ldi	r24, 0x08	; 8
     804:	90 e0       	ldi	r25, 0x00	; 0
     806:	a0 e0       	ldi	r26, 0x00	; 0
     808:	b0 e0       	ldi	r27, 0x00	; 0
     80a:	17 c0       	rjmp	.+46     	; 0x83a <__clzsi2+0x64>
     80c:	80 e0       	ldi	r24, 0x00	; 0
     80e:	90 e0       	ldi	r25, 0x00	; 0
     810:	a0 e0       	ldi	r26, 0x00	; 0
     812:	b0 e0       	ldi	r27, 0x00	; 0
     814:	12 c0       	rjmp	.+36     	; 0x83a <__clzsi2+0x64>
     816:	80 e0       	ldi	r24, 0x00	; 0
     818:	e8 16       	cp	r14, r24
     81a:	80 e0       	ldi	r24, 0x00	; 0
     81c:	f8 06       	cpc	r15, r24
     81e:	80 e0       	ldi	r24, 0x00	; 0
     820:	08 07       	cpc	r16, r24
     822:	81 e0       	ldi	r24, 0x01	; 1
     824:	18 07       	cpc	r17, r24
     826:	28 f0       	brcs	.+10     	; 0x832 <__clzsi2+0x5c>
     828:	88 e1       	ldi	r24, 0x18	; 24
     82a:	90 e0       	ldi	r25, 0x00	; 0
     82c:	a0 e0       	ldi	r26, 0x00	; 0
     82e:	b0 e0       	ldi	r27, 0x00	; 0
     830:	04 c0       	rjmp	.+8      	; 0x83a <__clzsi2+0x64>
     832:	80 e1       	ldi	r24, 0x10	; 16
     834:	90 e0       	ldi	r25, 0x00	; 0
     836:	a0 e0       	ldi	r26, 0x00	; 0
     838:	b0 e0       	ldi	r27, 0x00	; 0
     83a:	20 e2       	ldi	r18, 0x20	; 32
     83c:	30 e0       	ldi	r19, 0x00	; 0
     83e:	40 e0       	ldi	r20, 0x00	; 0
     840:	50 e0       	ldi	r21, 0x00	; 0
     842:	28 1b       	sub	r18, r24
     844:	39 0b       	sbc	r19, r25
     846:	4a 0b       	sbc	r20, r26
     848:	5b 0b       	sbc	r21, r27
     84a:	04 c0       	rjmp	.+8      	; 0x854 <__clzsi2+0x7e>
     84c:	16 95       	lsr	r17
     84e:	07 95       	ror	r16
     850:	f7 94       	ror	r15
     852:	e7 94       	ror	r14
     854:	8a 95       	dec	r24
     856:	d2 f7       	brpl	.-12     	; 0x84c <__clzsi2+0x76>
     858:	f7 01       	movw	r30, r14
     85a:	eb 5e       	subi	r30, 0xEB	; 235
     85c:	fe 4f       	sbci	r31, 0xFE	; 254
     85e:	80 81       	ld	r24, Z
     860:	28 1b       	sub	r18, r24
     862:	31 09       	sbc	r19, r1
     864:	41 09       	sbc	r20, r1
     866:	51 09       	sbc	r21, r1
     868:	c9 01       	movw	r24, r18
     86a:	1f 91       	pop	r17
     86c:	0f 91       	pop	r16
     86e:	ff 90       	pop	r15
     870:	ef 90       	pop	r14
     872:	08 95       	ret

00000874 <__pack_f>:
     874:	df 92       	push	r13
     876:	ef 92       	push	r14
     878:	ff 92       	push	r15
     87a:	0f 93       	push	r16
     87c:	1f 93       	push	r17
     87e:	fc 01       	movw	r30, r24
     880:	e4 80       	ldd	r14, Z+4	; 0x04
     882:	f5 80       	ldd	r15, Z+5	; 0x05
     884:	06 81       	ldd	r16, Z+6	; 0x06
     886:	17 81       	ldd	r17, Z+7	; 0x07
     888:	d1 80       	ldd	r13, Z+1	; 0x01
     88a:	80 81       	ld	r24, Z
     88c:	82 30       	cpi	r24, 0x02	; 2
     88e:	48 f4       	brcc	.+18     	; 0x8a2 <__pack_f+0x2e>
     890:	80 e0       	ldi	r24, 0x00	; 0
     892:	90 e0       	ldi	r25, 0x00	; 0
     894:	a0 e1       	ldi	r26, 0x10	; 16
     896:	b0 e0       	ldi	r27, 0x00	; 0
     898:	e8 2a       	or	r14, r24
     89a:	f9 2a       	or	r15, r25
     89c:	0a 2b       	or	r16, r26
     89e:	1b 2b       	or	r17, r27
     8a0:	a5 c0       	rjmp	.+330    	; 0x9ec <__pack_f+0x178>
     8a2:	84 30       	cpi	r24, 0x04	; 4
     8a4:	09 f4       	brne	.+2      	; 0x8a8 <__pack_f+0x34>
     8a6:	9f c0       	rjmp	.+318    	; 0x9e6 <__pack_f+0x172>
     8a8:	82 30       	cpi	r24, 0x02	; 2
     8aa:	21 f4       	brne	.+8      	; 0x8b4 <__pack_f+0x40>
     8ac:	ee 24       	eor	r14, r14
     8ae:	ff 24       	eor	r15, r15
     8b0:	87 01       	movw	r16, r14
     8b2:	05 c0       	rjmp	.+10     	; 0x8be <__pack_f+0x4a>
     8b4:	e1 14       	cp	r14, r1
     8b6:	f1 04       	cpc	r15, r1
     8b8:	01 05       	cpc	r16, r1
     8ba:	11 05       	cpc	r17, r1
     8bc:	19 f4       	brne	.+6      	; 0x8c4 <__pack_f+0x50>
     8be:	e0 e0       	ldi	r30, 0x00	; 0
     8c0:	f0 e0       	ldi	r31, 0x00	; 0
     8c2:	96 c0       	rjmp	.+300    	; 0x9f0 <__pack_f+0x17c>
     8c4:	62 81       	ldd	r22, Z+2	; 0x02
     8c6:	73 81       	ldd	r23, Z+3	; 0x03
     8c8:	9f ef       	ldi	r25, 0xFF	; 255
     8ca:	62 38       	cpi	r22, 0x82	; 130
     8cc:	79 07       	cpc	r23, r25
     8ce:	0c f0       	brlt	.+2      	; 0x8d2 <__pack_f+0x5e>
     8d0:	5b c0       	rjmp	.+182    	; 0x988 <__pack_f+0x114>
     8d2:	22 e8       	ldi	r18, 0x82	; 130
     8d4:	3f ef       	ldi	r19, 0xFF	; 255
     8d6:	26 1b       	sub	r18, r22
     8d8:	37 0b       	sbc	r19, r23
     8da:	2a 31       	cpi	r18, 0x1A	; 26
     8dc:	31 05       	cpc	r19, r1
     8de:	2c f0       	brlt	.+10     	; 0x8ea <__pack_f+0x76>
     8e0:	20 e0       	ldi	r18, 0x00	; 0
     8e2:	30 e0       	ldi	r19, 0x00	; 0
     8e4:	40 e0       	ldi	r20, 0x00	; 0
     8e6:	50 e0       	ldi	r21, 0x00	; 0
     8e8:	2a c0       	rjmp	.+84     	; 0x93e <__pack_f+0xca>
     8ea:	b8 01       	movw	r22, r16
     8ec:	a7 01       	movw	r20, r14
     8ee:	02 2e       	mov	r0, r18
     8f0:	04 c0       	rjmp	.+8      	; 0x8fa <__pack_f+0x86>
     8f2:	76 95       	lsr	r23
     8f4:	67 95       	ror	r22
     8f6:	57 95       	ror	r21
     8f8:	47 95       	ror	r20
     8fa:	0a 94       	dec	r0
     8fc:	d2 f7       	brpl	.-12     	; 0x8f2 <__pack_f+0x7e>
     8fe:	81 e0       	ldi	r24, 0x01	; 1
     900:	90 e0       	ldi	r25, 0x00	; 0
     902:	a0 e0       	ldi	r26, 0x00	; 0
     904:	b0 e0       	ldi	r27, 0x00	; 0
     906:	04 c0       	rjmp	.+8      	; 0x910 <__pack_f+0x9c>
     908:	88 0f       	add	r24, r24
     90a:	99 1f       	adc	r25, r25
     90c:	aa 1f       	adc	r26, r26
     90e:	bb 1f       	adc	r27, r27
     910:	2a 95       	dec	r18
     912:	d2 f7       	brpl	.-12     	; 0x908 <__pack_f+0x94>
     914:	01 97       	sbiw	r24, 0x01	; 1
     916:	a1 09       	sbc	r26, r1
     918:	b1 09       	sbc	r27, r1
     91a:	8e 21       	and	r24, r14
     91c:	9f 21       	and	r25, r15
     91e:	a0 23       	and	r26, r16
     920:	b1 23       	and	r27, r17
     922:	00 97       	sbiw	r24, 0x00	; 0
     924:	a1 05       	cpc	r26, r1
     926:	b1 05       	cpc	r27, r1
     928:	21 f0       	breq	.+8      	; 0x932 <__pack_f+0xbe>
     92a:	81 e0       	ldi	r24, 0x01	; 1
     92c:	90 e0       	ldi	r25, 0x00	; 0
     92e:	a0 e0       	ldi	r26, 0x00	; 0
     930:	b0 e0       	ldi	r27, 0x00	; 0
     932:	9a 01       	movw	r18, r20
     934:	ab 01       	movw	r20, r22
     936:	28 2b       	or	r18, r24
     938:	39 2b       	or	r19, r25
     93a:	4a 2b       	or	r20, r26
     93c:	5b 2b       	or	r21, r27
     93e:	da 01       	movw	r26, r20
     940:	c9 01       	movw	r24, r18
     942:	8f 77       	andi	r24, 0x7F	; 127
     944:	90 70       	andi	r25, 0x00	; 0
     946:	a0 70       	andi	r26, 0x00	; 0
     948:	b0 70       	andi	r27, 0x00	; 0
     94a:	80 34       	cpi	r24, 0x40	; 64
     94c:	91 05       	cpc	r25, r1
     94e:	a1 05       	cpc	r26, r1
     950:	b1 05       	cpc	r27, r1
     952:	39 f4       	brne	.+14     	; 0x962 <__pack_f+0xee>
     954:	27 ff       	sbrs	r18, 7
     956:	09 c0       	rjmp	.+18     	; 0x96a <__pack_f+0xf6>
     958:	20 5c       	subi	r18, 0xC0	; 192
     95a:	3f 4f       	sbci	r19, 0xFF	; 255
     95c:	4f 4f       	sbci	r20, 0xFF	; 255
     95e:	5f 4f       	sbci	r21, 0xFF	; 255
     960:	04 c0       	rjmp	.+8      	; 0x96a <__pack_f+0xf6>
     962:	21 5c       	subi	r18, 0xC1	; 193
     964:	3f 4f       	sbci	r19, 0xFF	; 255
     966:	4f 4f       	sbci	r20, 0xFF	; 255
     968:	5f 4f       	sbci	r21, 0xFF	; 255
     96a:	e0 e0       	ldi	r30, 0x00	; 0
     96c:	f0 e0       	ldi	r31, 0x00	; 0
     96e:	20 30       	cpi	r18, 0x00	; 0
     970:	a0 e0       	ldi	r26, 0x00	; 0
     972:	3a 07       	cpc	r19, r26
     974:	a0 e0       	ldi	r26, 0x00	; 0
     976:	4a 07       	cpc	r20, r26
     978:	a0 e4       	ldi	r26, 0x40	; 64
     97a:	5a 07       	cpc	r21, r26
     97c:	10 f0       	brcs	.+4      	; 0x982 <__pack_f+0x10e>
     97e:	e1 e0       	ldi	r30, 0x01	; 1
     980:	f0 e0       	ldi	r31, 0x00	; 0
     982:	79 01       	movw	r14, r18
     984:	8a 01       	movw	r16, r20
     986:	27 c0       	rjmp	.+78     	; 0x9d6 <__pack_f+0x162>
     988:	60 38       	cpi	r22, 0x80	; 128
     98a:	71 05       	cpc	r23, r1
     98c:	64 f5       	brge	.+88     	; 0x9e6 <__pack_f+0x172>
     98e:	fb 01       	movw	r30, r22
     990:	e1 58       	subi	r30, 0x81	; 129
     992:	ff 4f       	sbci	r31, 0xFF	; 255
     994:	d8 01       	movw	r26, r16
     996:	c7 01       	movw	r24, r14
     998:	8f 77       	andi	r24, 0x7F	; 127
     99a:	90 70       	andi	r25, 0x00	; 0
     99c:	a0 70       	andi	r26, 0x00	; 0
     99e:	b0 70       	andi	r27, 0x00	; 0
     9a0:	80 34       	cpi	r24, 0x40	; 64
     9a2:	91 05       	cpc	r25, r1
     9a4:	a1 05       	cpc	r26, r1
     9a6:	b1 05       	cpc	r27, r1
     9a8:	39 f4       	brne	.+14     	; 0x9b8 <__pack_f+0x144>
     9aa:	e7 fe       	sbrs	r14, 7
     9ac:	0d c0       	rjmp	.+26     	; 0x9c8 <__pack_f+0x154>
     9ae:	80 e4       	ldi	r24, 0x40	; 64
     9b0:	90 e0       	ldi	r25, 0x00	; 0
     9b2:	a0 e0       	ldi	r26, 0x00	; 0
     9b4:	b0 e0       	ldi	r27, 0x00	; 0
     9b6:	04 c0       	rjmp	.+8      	; 0x9c0 <__pack_f+0x14c>
     9b8:	8f e3       	ldi	r24, 0x3F	; 63
     9ba:	90 e0       	ldi	r25, 0x00	; 0
     9bc:	a0 e0       	ldi	r26, 0x00	; 0
     9be:	b0 e0       	ldi	r27, 0x00	; 0
     9c0:	e8 0e       	add	r14, r24
     9c2:	f9 1e       	adc	r15, r25
     9c4:	0a 1f       	adc	r16, r26
     9c6:	1b 1f       	adc	r17, r27
     9c8:	17 ff       	sbrs	r17, 7
     9ca:	05 c0       	rjmp	.+10     	; 0x9d6 <__pack_f+0x162>
     9cc:	16 95       	lsr	r17
     9ce:	07 95       	ror	r16
     9d0:	f7 94       	ror	r15
     9d2:	e7 94       	ror	r14
     9d4:	31 96       	adiw	r30, 0x01	; 1
     9d6:	87 e0       	ldi	r24, 0x07	; 7
     9d8:	16 95       	lsr	r17
     9da:	07 95       	ror	r16
     9dc:	f7 94       	ror	r15
     9de:	e7 94       	ror	r14
     9e0:	8a 95       	dec	r24
     9e2:	d1 f7       	brne	.-12     	; 0x9d8 <__pack_f+0x164>
     9e4:	05 c0       	rjmp	.+10     	; 0x9f0 <__pack_f+0x17c>
     9e6:	ee 24       	eor	r14, r14
     9e8:	ff 24       	eor	r15, r15
     9ea:	87 01       	movw	r16, r14
     9ec:	ef ef       	ldi	r30, 0xFF	; 255
     9ee:	f0 e0       	ldi	r31, 0x00	; 0
     9f0:	6e 2f       	mov	r22, r30
     9f2:	67 95       	ror	r22
     9f4:	66 27       	eor	r22, r22
     9f6:	67 95       	ror	r22
     9f8:	90 2f       	mov	r25, r16
     9fa:	9f 77       	andi	r25, 0x7F	; 127
     9fc:	d7 94       	ror	r13
     9fe:	dd 24       	eor	r13, r13
     a00:	d7 94       	ror	r13
     a02:	8e 2f       	mov	r24, r30
     a04:	86 95       	lsr	r24
     a06:	49 2f       	mov	r20, r25
     a08:	46 2b       	or	r20, r22
     a0a:	58 2f       	mov	r21, r24
     a0c:	5d 29       	or	r21, r13
     a0e:	b7 01       	movw	r22, r14
     a10:	ca 01       	movw	r24, r20
     a12:	1f 91       	pop	r17
     a14:	0f 91       	pop	r16
     a16:	ff 90       	pop	r15
     a18:	ef 90       	pop	r14
     a1a:	df 90       	pop	r13
     a1c:	08 95       	ret

00000a1e <__unpack_f>:
     a1e:	fc 01       	movw	r30, r24
     a20:	db 01       	movw	r26, r22
     a22:	40 81       	ld	r20, Z
     a24:	51 81       	ldd	r21, Z+1	; 0x01
     a26:	22 81       	ldd	r18, Z+2	; 0x02
     a28:	62 2f       	mov	r22, r18
     a2a:	6f 77       	andi	r22, 0x7F	; 127
     a2c:	70 e0       	ldi	r23, 0x00	; 0
     a2e:	22 1f       	adc	r18, r18
     a30:	22 27       	eor	r18, r18
     a32:	22 1f       	adc	r18, r18
     a34:	93 81       	ldd	r25, Z+3	; 0x03
     a36:	89 2f       	mov	r24, r25
     a38:	88 0f       	add	r24, r24
     a3a:	82 2b       	or	r24, r18
     a3c:	28 2f       	mov	r18, r24
     a3e:	30 e0       	ldi	r19, 0x00	; 0
     a40:	99 1f       	adc	r25, r25
     a42:	99 27       	eor	r25, r25
     a44:	99 1f       	adc	r25, r25
     a46:	11 96       	adiw	r26, 0x01	; 1
     a48:	9c 93       	st	X, r25
     a4a:	11 97       	sbiw	r26, 0x01	; 1
     a4c:	21 15       	cp	r18, r1
     a4e:	31 05       	cpc	r19, r1
     a50:	a9 f5       	brne	.+106    	; 0xabc <__unpack_f+0x9e>
     a52:	41 15       	cp	r20, r1
     a54:	51 05       	cpc	r21, r1
     a56:	61 05       	cpc	r22, r1
     a58:	71 05       	cpc	r23, r1
     a5a:	11 f4       	brne	.+4      	; 0xa60 <__unpack_f+0x42>
     a5c:	82 e0       	ldi	r24, 0x02	; 2
     a5e:	37 c0       	rjmp	.+110    	; 0xace <__unpack_f+0xb0>
     a60:	82 e8       	ldi	r24, 0x82	; 130
     a62:	9f ef       	ldi	r25, 0xFF	; 255
     a64:	13 96       	adiw	r26, 0x03	; 3
     a66:	9c 93       	st	X, r25
     a68:	8e 93       	st	-X, r24
     a6a:	12 97       	sbiw	r26, 0x02	; 2
     a6c:	9a 01       	movw	r18, r20
     a6e:	ab 01       	movw	r20, r22
     a70:	67 e0       	ldi	r22, 0x07	; 7
     a72:	22 0f       	add	r18, r18
     a74:	33 1f       	adc	r19, r19
     a76:	44 1f       	adc	r20, r20
     a78:	55 1f       	adc	r21, r21
     a7a:	6a 95       	dec	r22
     a7c:	d1 f7       	brne	.-12     	; 0xa72 <__unpack_f+0x54>
     a7e:	83 e0       	ldi	r24, 0x03	; 3
     a80:	8c 93       	st	X, r24
     a82:	0d c0       	rjmp	.+26     	; 0xa9e <__unpack_f+0x80>
     a84:	22 0f       	add	r18, r18
     a86:	33 1f       	adc	r19, r19
     a88:	44 1f       	adc	r20, r20
     a8a:	55 1f       	adc	r21, r21
     a8c:	12 96       	adiw	r26, 0x02	; 2
     a8e:	8d 91       	ld	r24, X+
     a90:	9c 91       	ld	r25, X
     a92:	13 97       	sbiw	r26, 0x03	; 3
     a94:	01 97       	sbiw	r24, 0x01	; 1
     a96:	13 96       	adiw	r26, 0x03	; 3
     a98:	9c 93       	st	X, r25
     a9a:	8e 93       	st	-X, r24
     a9c:	12 97       	sbiw	r26, 0x02	; 2
     a9e:	20 30       	cpi	r18, 0x00	; 0
     aa0:	80 e0       	ldi	r24, 0x00	; 0
     aa2:	38 07       	cpc	r19, r24
     aa4:	80 e0       	ldi	r24, 0x00	; 0
     aa6:	48 07       	cpc	r20, r24
     aa8:	80 e4       	ldi	r24, 0x40	; 64
     aaa:	58 07       	cpc	r21, r24
     aac:	58 f3       	brcs	.-42     	; 0xa84 <__unpack_f+0x66>
     aae:	14 96       	adiw	r26, 0x04	; 4
     ab0:	2d 93       	st	X+, r18
     ab2:	3d 93       	st	X+, r19
     ab4:	4d 93       	st	X+, r20
     ab6:	5c 93       	st	X, r21
     ab8:	17 97       	sbiw	r26, 0x07	; 7
     aba:	08 95       	ret
     abc:	2f 3f       	cpi	r18, 0xFF	; 255
     abe:	31 05       	cpc	r19, r1
     ac0:	79 f4       	brne	.+30     	; 0xae0 <__unpack_f+0xc2>
     ac2:	41 15       	cp	r20, r1
     ac4:	51 05       	cpc	r21, r1
     ac6:	61 05       	cpc	r22, r1
     ac8:	71 05       	cpc	r23, r1
     aca:	19 f4       	brne	.+6      	; 0xad2 <__unpack_f+0xb4>
     acc:	84 e0       	ldi	r24, 0x04	; 4
     ace:	8c 93       	st	X, r24
     ad0:	08 95       	ret
     ad2:	64 ff       	sbrs	r22, 4
     ad4:	03 c0       	rjmp	.+6      	; 0xadc <__unpack_f+0xbe>
     ad6:	81 e0       	ldi	r24, 0x01	; 1
     ad8:	8c 93       	st	X, r24
     ada:	12 c0       	rjmp	.+36     	; 0xb00 <__unpack_f+0xe2>
     adc:	1c 92       	st	X, r1
     ade:	10 c0       	rjmp	.+32     	; 0xb00 <__unpack_f+0xe2>
     ae0:	2f 57       	subi	r18, 0x7F	; 127
     ae2:	30 40       	sbci	r19, 0x00	; 0
     ae4:	13 96       	adiw	r26, 0x03	; 3
     ae6:	3c 93       	st	X, r19
     ae8:	2e 93       	st	-X, r18
     aea:	12 97       	sbiw	r26, 0x02	; 2
     aec:	83 e0       	ldi	r24, 0x03	; 3
     aee:	8c 93       	st	X, r24
     af0:	87 e0       	ldi	r24, 0x07	; 7
     af2:	44 0f       	add	r20, r20
     af4:	55 1f       	adc	r21, r21
     af6:	66 1f       	adc	r22, r22
     af8:	77 1f       	adc	r23, r23
     afa:	8a 95       	dec	r24
     afc:	d1 f7       	brne	.-12     	; 0xaf2 <__unpack_f+0xd4>
     afe:	70 64       	ori	r23, 0x40	; 64
     b00:	14 96       	adiw	r26, 0x04	; 4
     b02:	4d 93       	st	X+, r20
     b04:	5d 93       	st	X+, r21
     b06:	6d 93       	st	X+, r22
     b08:	7c 93       	st	X, r23
     b0a:	17 97       	sbiw	r26, 0x07	; 7
     b0c:	08 95       	ret

00000b0e <__divmodhi4>:
     b0e:	97 fb       	bst	r25, 7
     b10:	09 2e       	mov	r0, r25
     b12:	07 26       	eor	r0, r23
     b14:	0a d0       	rcall	.+20     	; 0xb2a <__divmodhi4_neg1>
     b16:	77 fd       	sbrc	r23, 7
     b18:	04 d0       	rcall	.+8      	; 0xb22 <__divmodhi4_neg2>
     b1a:	0c d0       	rcall	.+24     	; 0xb34 <__udivmodhi4>
     b1c:	06 d0       	rcall	.+12     	; 0xb2a <__divmodhi4_neg1>
     b1e:	00 20       	and	r0, r0
     b20:	1a f4       	brpl	.+6      	; 0xb28 <__divmodhi4_exit>

00000b22 <__divmodhi4_neg2>:
     b22:	70 95       	com	r23
     b24:	61 95       	neg	r22
     b26:	7f 4f       	sbci	r23, 0xFF	; 255

00000b28 <__divmodhi4_exit>:
     b28:	08 95       	ret

00000b2a <__divmodhi4_neg1>:
     b2a:	f6 f7       	brtc	.-4      	; 0xb28 <__divmodhi4_exit>
     b2c:	90 95       	com	r25
     b2e:	81 95       	neg	r24
     b30:	9f 4f       	sbci	r25, 0xFF	; 255
     b32:	08 95       	ret

00000b34 <__udivmodhi4>:
     b34:	aa 1b       	sub	r26, r26
     b36:	bb 1b       	sub	r27, r27
     b38:	51 e1       	ldi	r21, 0x11	; 17
     b3a:	07 c0       	rjmp	.+14     	; 0xb4a <__udivmodhi4_ep>

00000b3c <__udivmodhi4_loop>:
     b3c:	aa 1f       	adc	r26, r26
     b3e:	bb 1f       	adc	r27, r27
     b40:	a6 17       	cp	r26, r22
     b42:	b7 07       	cpc	r27, r23
     b44:	10 f0       	brcs	.+4      	; 0xb4a <__udivmodhi4_ep>
     b46:	a6 1b       	sub	r26, r22
     b48:	b7 0b       	sbc	r27, r23

00000b4a <__udivmodhi4_ep>:
     b4a:	88 1f       	adc	r24, r24
     b4c:	99 1f       	adc	r25, r25
     b4e:	5a 95       	dec	r21
     b50:	a9 f7       	brne	.-22     	; 0xb3c <__udivmodhi4_loop>
     b52:	80 95       	com	r24
     b54:	90 95       	com	r25
     b56:	bc 01       	movw	r22, r24
     b58:	cd 01       	movw	r24, r26
     b5a:	08 95       	ret

00000b5c <__prologue_saves__>:
     b5c:	2f 92       	push	r2
     b5e:	3f 92       	push	r3
     b60:	4f 92       	push	r4
     b62:	5f 92       	push	r5
     b64:	6f 92       	push	r6
     b66:	7f 92       	push	r7
     b68:	8f 92       	push	r8
     b6a:	9f 92       	push	r9
     b6c:	af 92       	push	r10
     b6e:	bf 92       	push	r11
     b70:	cf 92       	push	r12
     b72:	df 92       	push	r13
     b74:	ef 92       	push	r14
     b76:	ff 92       	push	r15
     b78:	0f 93       	push	r16
     b7a:	1f 93       	push	r17
     b7c:	cf 93       	push	r28
     b7e:	df 93       	push	r29
     b80:	cd b7       	in	r28, 0x3d	; 61
     b82:	de b7       	in	r29, 0x3e	; 62
     b84:	ca 1b       	sub	r28, r26
     b86:	db 0b       	sbc	r29, r27
     b88:	0f b6       	in	r0, 0x3f	; 63
     b8a:	f8 94       	cli
     b8c:	de bf       	out	0x3e, r29	; 62
     b8e:	0f be       	out	0x3f, r0	; 63
     b90:	cd bf       	out	0x3d, r28	; 61
     b92:	09 94       	ijmp

00000b94 <__epilogue_restores__>:
     b94:	2a 88       	ldd	r2, Y+18	; 0x12
     b96:	39 88       	ldd	r3, Y+17	; 0x11
     b98:	48 88       	ldd	r4, Y+16	; 0x10
     b9a:	5f 84       	ldd	r5, Y+15	; 0x0f
     b9c:	6e 84       	ldd	r6, Y+14	; 0x0e
     b9e:	7d 84       	ldd	r7, Y+13	; 0x0d
     ba0:	8c 84       	ldd	r8, Y+12	; 0x0c
     ba2:	9b 84       	ldd	r9, Y+11	; 0x0b
     ba4:	aa 84       	ldd	r10, Y+10	; 0x0a
     ba6:	b9 84       	ldd	r11, Y+9	; 0x09
     ba8:	c8 84       	ldd	r12, Y+8	; 0x08
     baa:	df 80       	ldd	r13, Y+7	; 0x07
     bac:	ee 80       	ldd	r14, Y+6	; 0x06
     bae:	fd 80       	ldd	r15, Y+5	; 0x05
     bb0:	0c 81       	ldd	r16, Y+4	; 0x04
     bb2:	1b 81       	ldd	r17, Y+3	; 0x03
     bb4:	aa 81       	ldd	r26, Y+2	; 0x02
     bb6:	b9 81       	ldd	r27, Y+1	; 0x01
     bb8:	ce 0f       	add	r28, r30
     bba:	d1 1d       	adc	r29, r1
     bbc:	0f b6       	in	r0, 0x3f	; 63
     bbe:	f8 94       	cli
     bc0:	de bf       	out	0x3e, r29	; 62
     bc2:	0f be       	out	0x3f, r0	; 63
     bc4:	cd bf       	out	0x3d, r28	; 61
     bc6:	ed 01       	movw	r28, r26
     bc8:	08 95       	ret

00000bca <sprintf>:
     bca:	ae e0       	ldi	r26, 0x0E	; 14
     bcc:	b0 e0       	ldi	r27, 0x00	; 0
     bce:	eb ee       	ldi	r30, 0xEB	; 235
     bd0:	f5 e0       	ldi	r31, 0x05	; 5
     bd2:	0c 94 bc 05 	jmp	0xb78	; 0xb78 <__prologue_saves__+0x1c>
     bd6:	0d 89       	ldd	r16, Y+21	; 0x15
     bd8:	1e 89       	ldd	r17, Y+22	; 0x16
     bda:	86 e0       	ldi	r24, 0x06	; 6
     bdc:	8c 83       	std	Y+4, r24	; 0x04
     bde:	1a 83       	std	Y+2, r17	; 0x02
     be0:	09 83       	std	Y+1, r16	; 0x01
     be2:	8f ef       	ldi	r24, 0xFF	; 255
     be4:	9f e7       	ldi	r25, 0x7F	; 127
     be6:	9e 83       	std	Y+6, r25	; 0x06
     be8:	8d 83       	std	Y+5, r24	; 0x05
     bea:	9e 01       	movw	r18, r28
     bec:	27 5e       	subi	r18, 0xE7	; 231
     bee:	3f 4f       	sbci	r19, 0xFF	; 255
     bf0:	ce 01       	movw	r24, r28
     bf2:	01 96       	adiw	r24, 0x01	; 1
     bf4:	6f 89       	ldd	r22, Y+23	; 0x17
     bf6:	78 8d       	ldd	r23, Y+24	; 0x18
     bf8:	a9 01       	movw	r20, r18
     bfa:	0e 94 09 06 	call	0xc12	; 0xc12 <vfprintf>
     bfe:	2f 81       	ldd	r18, Y+7	; 0x07
     c00:	38 85       	ldd	r19, Y+8	; 0x08
     c02:	02 0f       	add	r16, r18
     c04:	13 1f       	adc	r17, r19
     c06:	f8 01       	movw	r30, r16
     c08:	10 82       	st	Z, r1
     c0a:	2e 96       	adiw	r28, 0x0e	; 14
     c0c:	e4 e0       	ldi	r30, 0x04	; 4
     c0e:	0c 94 d8 05 	jmp	0xbb0	; 0xbb0 <__epilogue_restores__+0x1c>

00000c12 <vfprintf>:
     c12:	ab e0       	ldi	r26, 0x0B	; 11
     c14:	b0 e0       	ldi	r27, 0x00	; 0
     c16:	ef e0       	ldi	r30, 0x0F	; 15
     c18:	f6 e0       	ldi	r31, 0x06	; 6
     c1a:	0c 94 ae 05 	jmp	0xb5c	; 0xb5c <__prologue_saves__>
     c1e:	3c 01       	movw	r6, r24
     c20:	2b 01       	movw	r4, r22
     c22:	5a 01       	movw	r10, r20
     c24:	fc 01       	movw	r30, r24
     c26:	17 82       	std	Z+7, r1	; 0x07
     c28:	16 82       	std	Z+6, r1	; 0x06
     c2a:	83 81       	ldd	r24, Z+3	; 0x03
     c2c:	81 fd       	sbrc	r24, 1
     c2e:	03 c0       	rjmp	.+6      	; 0xc36 <vfprintf+0x24>
     c30:	6f ef       	ldi	r22, 0xFF	; 255
     c32:	7f ef       	ldi	r23, 0xFF	; 255
     c34:	c6 c1       	rjmp	.+908    	; 0xfc2 <vfprintf+0x3b0>
     c36:	9a e0       	ldi	r25, 0x0A	; 10
     c38:	89 2e       	mov	r8, r25
     c3a:	1e 01       	movw	r2, r28
     c3c:	08 94       	sec
     c3e:	21 1c       	adc	r2, r1
     c40:	31 1c       	adc	r3, r1
     c42:	f3 01       	movw	r30, r6
     c44:	23 81       	ldd	r18, Z+3	; 0x03
     c46:	f2 01       	movw	r30, r4
     c48:	23 fd       	sbrc	r18, 3
     c4a:	85 91       	lpm	r24, Z+
     c4c:	23 ff       	sbrs	r18, 3
     c4e:	81 91       	ld	r24, Z+
     c50:	2f 01       	movw	r4, r30
     c52:	88 23       	and	r24, r24
     c54:	09 f4       	brne	.+2      	; 0xc58 <vfprintf+0x46>
     c56:	b2 c1       	rjmp	.+868    	; 0xfbc <vfprintf+0x3aa>
     c58:	85 32       	cpi	r24, 0x25	; 37
     c5a:	39 f4       	brne	.+14     	; 0xc6a <vfprintf+0x58>
     c5c:	23 fd       	sbrc	r18, 3
     c5e:	85 91       	lpm	r24, Z+
     c60:	23 ff       	sbrs	r18, 3
     c62:	81 91       	ld	r24, Z+
     c64:	2f 01       	movw	r4, r30
     c66:	85 32       	cpi	r24, 0x25	; 37
     c68:	29 f4       	brne	.+10     	; 0xc74 <vfprintf+0x62>
     c6a:	90 e0       	ldi	r25, 0x00	; 0
     c6c:	b3 01       	movw	r22, r6
     c6e:	0e 94 fc 07 	call	0xff8	; 0xff8 <fputc>
     c72:	e7 cf       	rjmp	.-50     	; 0xc42 <vfprintf+0x30>
     c74:	98 2f       	mov	r25, r24
     c76:	ff 24       	eor	r15, r15
     c78:	ee 24       	eor	r14, r14
     c7a:	99 24       	eor	r9, r9
     c7c:	ff e1       	ldi	r31, 0x1F	; 31
     c7e:	ff 15       	cp	r31, r15
     c80:	d0 f0       	brcs	.+52     	; 0xcb6 <vfprintf+0xa4>
     c82:	9b 32       	cpi	r25, 0x2B	; 43
     c84:	69 f0       	breq	.+26     	; 0xca0 <vfprintf+0x8e>
     c86:	9c 32       	cpi	r25, 0x2C	; 44
     c88:	28 f4       	brcc	.+10     	; 0xc94 <vfprintf+0x82>
     c8a:	90 32       	cpi	r25, 0x20	; 32
     c8c:	59 f0       	breq	.+22     	; 0xca4 <vfprintf+0x92>
     c8e:	93 32       	cpi	r25, 0x23	; 35
     c90:	91 f4       	brne	.+36     	; 0xcb6 <vfprintf+0xa4>
     c92:	0e c0       	rjmp	.+28     	; 0xcb0 <vfprintf+0x9e>
     c94:	9d 32       	cpi	r25, 0x2D	; 45
     c96:	49 f0       	breq	.+18     	; 0xcaa <vfprintf+0x98>
     c98:	90 33       	cpi	r25, 0x30	; 48
     c9a:	69 f4       	brne	.+26     	; 0xcb6 <vfprintf+0xa4>
     c9c:	41 e0       	ldi	r20, 0x01	; 1
     c9e:	24 c0       	rjmp	.+72     	; 0xce8 <vfprintf+0xd6>
     ca0:	52 e0       	ldi	r21, 0x02	; 2
     ca2:	f5 2a       	or	r15, r21
     ca4:	84 e0       	ldi	r24, 0x04	; 4
     ca6:	f8 2a       	or	r15, r24
     ca8:	28 c0       	rjmp	.+80     	; 0xcfa <vfprintf+0xe8>
     caa:	98 e0       	ldi	r25, 0x08	; 8
     cac:	f9 2a       	or	r15, r25
     cae:	25 c0       	rjmp	.+74     	; 0xcfa <vfprintf+0xe8>
     cb0:	e0 e1       	ldi	r30, 0x10	; 16
     cb2:	fe 2a       	or	r15, r30
     cb4:	22 c0       	rjmp	.+68     	; 0xcfa <vfprintf+0xe8>
     cb6:	f7 fc       	sbrc	r15, 7
     cb8:	29 c0       	rjmp	.+82     	; 0xd0c <vfprintf+0xfa>
     cba:	89 2f       	mov	r24, r25
     cbc:	80 53       	subi	r24, 0x30	; 48
     cbe:	8a 30       	cpi	r24, 0x0A	; 10
     cc0:	70 f4       	brcc	.+28     	; 0xcde <vfprintf+0xcc>
     cc2:	f6 fe       	sbrs	r15, 6
     cc4:	05 c0       	rjmp	.+10     	; 0xcd0 <vfprintf+0xbe>
     cc6:	98 9c       	mul	r9, r8
     cc8:	90 2c       	mov	r9, r0
     cca:	11 24       	eor	r1, r1
     ccc:	98 0e       	add	r9, r24
     cce:	15 c0       	rjmp	.+42     	; 0xcfa <vfprintf+0xe8>
     cd0:	e8 9c       	mul	r14, r8
     cd2:	e0 2c       	mov	r14, r0
     cd4:	11 24       	eor	r1, r1
     cd6:	e8 0e       	add	r14, r24
     cd8:	f0 e2       	ldi	r31, 0x20	; 32
     cda:	ff 2a       	or	r15, r31
     cdc:	0e c0       	rjmp	.+28     	; 0xcfa <vfprintf+0xe8>
     cde:	9e 32       	cpi	r25, 0x2E	; 46
     ce0:	29 f4       	brne	.+10     	; 0xcec <vfprintf+0xda>
     ce2:	f6 fc       	sbrc	r15, 6
     ce4:	6b c1       	rjmp	.+726    	; 0xfbc <vfprintf+0x3aa>
     ce6:	40 e4       	ldi	r20, 0x40	; 64
     ce8:	f4 2a       	or	r15, r20
     cea:	07 c0       	rjmp	.+14     	; 0xcfa <vfprintf+0xe8>
     cec:	9c 36       	cpi	r25, 0x6C	; 108
     cee:	19 f4       	brne	.+6      	; 0xcf6 <vfprintf+0xe4>
     cf0:	50 e8       	ldi	r21, 0x80	; 128
     cf2:	f5 2a       	or	r15, r21
     cf4:	02 c0       	rjmp	.+4      	; 0xcfa <vfprintf+0xe8>
     cf6:	98 36       	cpi	r25, 0x68	; 104
     cf8:	49 f4       	brne	.+18     	; 0xd0c <vfprintf+0xfa>
     cfa:	f2 01       	movw	r30, r4
     cfc:	23 fd       	sbrc	r18, 3
     cfe:	95 91       	lpm	r25, Z+
     d00:	23 ff       	sbrs	r18, 3
     d02:	91 91       	ld	r25, Z+
     d04:	2f 01       	movw	r4, r30
     d06:	99 23       	and	r25, r25
     d08:	09 f0       	breq	.+2      	; 0xd0c <vfprintf+0xfa>
     d0a:	b8 cf       	rjmp	.-144    	; 0xc7c <vfprintf+0x6a>
     d0c:	89 2f       	mov	r24, r25
     d0e:	85 54       	subi	r24, 0x45	; 69
     d10:	83 30       	cpi	r24, 0x03	; 3
     d12:	18 f0       	brcs	.+6      	; 0xd1a <vfprintf+0x108>
     d14:	80 52       	subi	r24, 0x20	; 32
     d16:	83 30       	cpi	r24, 0x03	; 3
     d18:	38 f4       	brcc	.+14     	; 0xd28 <vfprintf+0x116>
     d1a:	44 e0       	ldi	r20, 0x04	; 4
     d1c:	50 e0       	ldi	r21, 0x00	; 0
     d1e:	a4 0e       	add	r10, r20
     d20:	b5 1e       	adc	r11, r21
     d22:	5f e3       	ldi	r21, 0x3F	; 63
     d24:	59 83       	std	Y+1, r21	; 0x01
     d26:	0f c0       	rjmp	.+30     	; 0xd46 <vfprintf+0x134>
     d28:	93 36       	cpi	r25, 0x63	; 99
     d2a:	31 f0       	breq	.+12     	; 0xd38 <vfprintf+0x126>
     d2c:	93 37       	cpi	r25, 0x73	; 115
     d2e:	79 f0       	breq	.+30     	; 0xd4e <vfprintf+0x13c>
     d30:	93 35       	cpi	r25, 0x53	; 83
     d32:	09 f0       	breq	.+2      	; 0xd36 <vfprintf+0x124>
     d34:	56 c0       	rjmp	.+172    	; 0xde2 <vfprintf+0x1d0>
     d36:	20 c0       	rjmp	.+64     	; 0xd78 <vfprintf+0x166>
     d38:	f5 01       	movw	r30, r10
     d3a:	80 81       	ld	r24, Z
     d3c:	89 83       	std	Y+1, r24	; 0x01
     d3e:	42 e0       	ldi	r20, 0x02	; 2
     d40:	50 e0       	ldi	r21, 0x00	; 0
     d42:	a4 0e       	add	r10, r20
     d44:	b5 1e       	adc	r11, r21
     d46:	61 01       	movw	r12, r2
     d48:	01 e0       	ldi	r16, 0x01	; 1
     d4a:	10 e0       	ldi	r17, 0x00	; 0
     d4c:	12 c0       	rjmp	.+36     	; 0xd72 <vfprintf+0x160>
     d4e:	f5 01       	movw	r30, r10
     d50:	c0 80       	ld	r12, Z
     d52:	d1 80       	ldd	r13, Z+1	; 0x01
     d54:	f6 fc       	sbrc	r15, 6
     d56:	03 c0       	rjmp	.+6      	; 0xd5e <vfprintf+0x14c>
     d58:	6f ef       	ldi	r22, 0xFF	; 255
     d5a:	7f ef       	ldi	r23, 0xFF	; 255
     d5c:	02 c0       	rjmp	.+4      	; 0xd62 <vfprintf+0x150>
     d5e:	69 2d       	mov	r22, r9
     d60:	70 e0       	ldi	r23, 0x00	; 0
     d62:	42 e0       	ldi	r20, 0x02	; 2
     d64:	50 e0       	ldi	r21, 0x00	; 0
     d66:	a4 0e       	add	r10, r20
     d68:	b5 1e       	adc	r11, r21
     d6a:	c6 01       	movw	r24, r12
     d6c:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <strnlen>
     d70:	8c 01       	movw	r16, r24
     d72:	5f e7       	ldi	r21, 0x7F	; 127
     d74:	f5 22       	and	r15, r21
     d76:	14 c0       	rjmp	.+40     	; 0xda0 <vfprintf+0x18e>
     d78:	f5 01       	movw	r30, r10
     d7a:	c0 80       	ld	r12, Z
     d7c:	d1 80       	ldd	r13, Z+1	; 0x01
     d7e:	f6 fc       	sbrc	r15, 6
     d80:	03 c0       	rjmp	.+6      	; 0xd88 <vfprintf+0x176>
     d82:	6f ef       	ldi	r22, 0xFF	; 255
     d84:	7f ef       	ldi	r23, 0xFF	; 255
     d86:	02 c0       	rjmp	.+4      	; 0xd8c <vfprintf+0x17a>
     d88:	69 2d       	mov	r22, r9
     d8a:	70 e0       	ldi	r23, 0x00	; 0
     d8c:	42 e0       	ldi	r20, 0x02	; 2
     d8e:	50 e0       	ldi	r21, 0x00	; 0
     d90:	a4 0e       	add	r10, r20
     d92:	b5 1e       	adc	r11, r21
     d94:	c6 01       	movw	r24, r12
     d96:	0e 94 e6 07 	call	0xfcc	; 0xfcc <strnlen_P>
     d9a:	8c 01       	movw	r16, r24
     d9c:	50 e8       	ldi	r21, 0x80	; 128
     d9e:	f5 2a       	or	r15, r21
     da0:	f3 fe       	sbrs	r15, 3
     da2:	07 c0       	rjmp	.+14     	; 0xdb2 <vfprintf+0x1a0>
     da4:	1a c0       	rjmp	.+52     	; 0xdda <vfprintf+0x1c8>
     da6:	80 e2       	ldi	r24, 0x20	; 32
     da8:	90 e0       	ldi	r25, 0x00	; 0
     daa:	b3 01       	movw	r22, r6
     dac:	0e 94 fc 07 	call	0xff8	; 0xff8 <fputc>
     db0:	ea 94       	dec	r14
     db2:	8e 2d       	mov	r24, r14
     db4:	90 e0       	ldi	r25, 0x00	; 0
     db6:	08 17       	cp	r16, r24
     db8:	19 07       	cpc	r17, r25
     dba:	a8 f3       	brcs	.-22     	; 0xda6 <vfprintf+0x194>
     dbc:	0e c0       	rjmp	.+28     	; 0xdda <vfprintf+0x1c8>
     dbe:	f6 01       	movw	r30, r12
     dc0:	f7 fc       	sbrc	r15, 7
     dc2:	85 91       	lpm	r24, Z+
     dc4:	f7 fe       	sbrs	r15, 7
     dc6:	81 91       	ld	r24, Z+
     dc8:	6f 01       	movw	r12, r30
     dca:	90 e0       	ldi	r25, 0x00	; 0
     dcc:	b3 01       	movw	r22, r6
     dce:	0e 94 fc 07 	call	0xff8	; 0xff8 <fputc>
     dd2:	e1 10       	cpse	r14, r1
     dd4:	ea 94       	dec	r14
     dd6:	01 50       	subi	r16, 0x01	; 1
     dd8:	10 40       	sbci	r17, 0x00	; 0
     dda:	01 15       	cp	r16, r1
     ddc:	11 05       	cpc	r17, r1
     dde:	79 f7       	brne	.-34     	; 0xdbe <vfprintf+0x1ac>
     de0:	ea c0       	rjmp	.+468    	; 0xfb6 <vfprintf+0x3a4>
     de2:	94 36       	cpi	r25, 0x64	; 100
     de4:	11 f0       	breq	.+4      	; 0xdea <vfprintf+0x1d8>
     de6:	99 36       	cpi	r25, 0x69	; 105
     de8:	69 f5       	brne	.+90     	; 0xe44 <vfprintf+0x232>
     dea:	f7 fe       	sbrs	r15, 7
     dec:	08 c0       	rjmp	.+16     	; 0xdfe <vfprintf+0x1ec>
     dee:	f5 01       	movw	r30, r10
     df0:	20 81       	ld	r18, Z
     df2:	31 81       	ldd	r19, Z+1	; 0x01
     df4:	42 81       	ldd	r20, Z+2	; 0x02
     df6:	53 81       	ldd	r21, Z+3	; 0x03
     df8:	84 e0       	ldi	r24, 0x04	; 4
     dfa:	90 e0       	ldi	r25, 0x00	; 0
     dfc:	0a c0       	rjmp	.+20     	; 0xe12 <vfprintf+0x200>
     dfe:	f5 01       	movw	r30, r10
     e00:	80 81       	ld	r24, Z
     e02:	91 81       	ldd	r25, Z+1	; 0x01
     e04:	9c 01       	movw	r18, r24
     e06:	44 27       	eor	r20, r20
     e08:	37 fd       	sbrc	r19, 7
     e0a:	40 95       	com	r20
     e0c:	54 2f       	mov	r21, r20
     e0e:	82 e0       	ldi	r24, 0x02	; 2
     e10:	90 e0       	ldi	r25, 0x00	; 0
     e12:	a8 0e       	add	r10, r24
     e14:	b9 1e       	adc	r11, r25
     e16:	9f e6       	ldi	r25, 0x6F	; 111
     e18:	f9 22       	and	r15, r25
     e1a:	57 ff       	sbrs	r21, 7
     e1c:	09 c0       	rjmp	.+18     	; 0xe30 <vfprintf+0x21e>
     e1e:	50 95       	com	r21
     e20:	40 95       	com	r20
     e22:	30 95       	com	r19
     e24:	21 95       	neg	r18
     e26:	3f 4f       	sbci	r19, 0xFF	; 255
     e28:	4f 4f       	sbci	r20, 0xFF	; 255
     e2a:	5f 4f       	sbci	r21, 0xFF	; 255
     e2c:	e0 e8       	ldi	r30, 0x80	; 128
     e2e:	fe 2a       	or	r15, r30
     e30:	ca 01       	movw	r24, r20
     e32:	b9 01       	movw	r22, r18
     e34:	a1 01       	movw	r20, r2
     e36:	2a e0       	ldi	r18, 0x0A	; 10
     e38:	30 e0       	ldi	r19, 0x00	; 0
     e3a:	0e 94 28 08 	call	0x1050	; 0x1050 <__ultoa_invert>
     e3e:	d8 2e       	mov	r13, r24
     e40:	d2 18       	sub	r13, r2
     e42:	40 c0       	rjmp	.+128    	; 0xec4 <vfprintf+0x2b2>
     e44:	95 37       	cpi	r25, 0x75	; 117
     e46:	29 f4       	brne	.+10     	; 0xe52 <vfprintf+0x240>
     e48:	1f 2d       	mov	r17, r15
     e4a:	1f 7e       	andi	r17, 0xEF	; 239
     e4c:	2a e0       	ldi	r18, 0x0A	; 10
     e4e:	30 e0       	ldi	r19, 0x00	; 0
     e50:	1d c0       	rjmp	.+58     	; 0xe8c <vfprintf+0x27a>
     e52:	1f 2d       	mov	r17, r15
     e54:	19 7f       	andi	r17, 0xF9	; 249
     e56:	9f 36       	cpi	r25, 0x6F	; 111
     e58:	61 f0       	breq	.+24     	; 0xe72 <vfprintf+0x260>
     e5a:	90 37       	cpi	r25, 0x70	; 112
     e5c:	20 f4       	brcc	.+8      	; 0xe66 <vfprintf+0x254>
     e5e:	98 35       	cpi	r25, 0x58	; 88
     e60:	09 f0       	breq	.+2      	; 0xe64 <vfprintf+0x252>
     e62:	ac c0       	rjmp	.+344    	; 0xfbc <vfprintf+0x3aa>
     e64:	0f c0       	rjmp	.+30     	; 0xe84 <vfprintf+0x272>
     e66:	90 37       	cpi	r25, 0x70	; 112
     e68:	39 f0       	breq	.+14     	; 0xe78 <vfprintf+0x266>
     e6a:	98 37       	cpi	r25, 0x78	; 120
     e6c:	09 f0       	breq	.+2      	; 0xe70 <vfprintf+0x25e>
     e6e:	a6 c0       	rjmp	.+332    	; 0xfbc <vfprintf+0x3aa>
     e70:	04 c0       	rjmp	.+8      	; 0xe7a <vfprintf+0x268>
     e72:	28 e0       	ldi	r18, 0x08	; 8
     e74:	30 e0       	ldi	r19, 0x00	; 0
     e76:	0a c0       	rjmp	.+20     	; 0xe8c <vfprintf+0x27a>
     e78:	10 61       	ori	r17, 0x10	; 16
     e7a:	14 fd       	sbrc	r17, 4
     e7c:	14 60       	ori	r17, 0x04	; 4
     e7e:	20 e1       	ldi	r18, 0x10	; 16
     e80:	30 e0       	ldi	r19, 0x00	; 0
     e82:	04 c0       	rjmp	.+8      	; 0xe8c <vfprintf+0x27a>
     e84:	14 fd       	sbrc	r17, 4
     e86:	16 60       	ori	r17, 0x06	; 6
     e88:	20 e1       	ldi	r18, 0x10	; 16
     e8a:	32 e0       	ldi	r19, 0x02	; 2
     e8c:	17 ff       	sbrs	r17, 7
     e8e:	08 c0       	rjmp	.+16     	; 0xea0 <vfprintf+0x28e>
     e90:	f5 01       	movw	r30, r10
     e92:	60 81       	ld	r22, Z
     e94:	71 81       	ldd	r23, Z+1	; 0x01
     e96:	82 81       	ldd	r24, Z+2	; 0x02
     e98:	93 81       	ldd	r25, Z+3	; 0x03
     e9a:	44 e0       	ldi	r20, 0x04	; 4
     e9c:	50 e0       	ldi	r21, 0x00	; 0
     e9e:	08 c0       	rjmp	.+16     	; 0xeb0 <vfprintf+0x29e>
     ea0:	f5 01       	movw	r30, r10
     ea2:	80 81       	ld	r24, Z
     ea4:	91 81       	ldd	r25, Z+1	; 0x01
     ea6:	bc 01       	movw	r22, r24
     ea8:	80 e0       	ldi	r24, 0x00	; 0
     eaa:	90 e0       	ldi	r25, 0x00	; 0
     eac:	42 e0       	ldi	r20, 0x02	; 2
     eae:	50 e0       	ldi	r21, 0x00	; 0
     eb0:	a4 0e       	add	r10, r20
     eb2:	b5 1e       	adc	r11, r21
     eb4:	a1 01       	movw	r20, r2
     eb6:	0e 94 28 08 	call	0x1050	; 0x1050 <__ultoa_invert>
     eba:	d8 2e       	mov	r13, r24
     ebc:	d2 18       	sub	r13, r2
     ebe:	8f e7       	ldi	r24, 0x7F	; 127
     ec0:	f8 2e       	mov	r15, r24
     ec2:	f1 22       	and	r15, r17
     ec4:	f6 fe       	sbrs	r15, 6
     ec6:	0b c0       	rjmp	.+22     	; 0xede <vfprintf+0x2cc>
     ec8:	5e ef       	ldi	r21, 0xFE	; 254
     eca:	f5 22       	and	r15, r21
     ecc:	d9 14       	cp	r13, r9
     ece:	38 f4       	brcc	.+14     	; 0xede <vfprintf+0x2cc>
     ed0:	f4 fe       	sbrs	r15, 4
     ed2:	07 c0       	rjmp	.+14     	; 0xee2 <vfprintf+0x2d0>
     ed4:	f2 fc       	sbrc	r15, 2
     ed6:	05 c0       	rjmp	.+10     	; 0xee2 <vfprintf+0x2d0>
     ed8:	8f ee       	ldi	r24, 0xEF	; 239
     eda:	f8 22       	and	r15, r24
     edc:	02 c0       	rjmp	.+4      	; 0xee2 <vfprintf+0x2d0>
     ede:	1d 2d       	mov	r17, r13
     ee0:	01 c0       	rjmp	.+2      	; 0xee4 <vfprintf+0x2d2>
     ee2:	19 2d       	mov	r17, r9
     ee4:	f4 fe       	sbrs	r15, 4
     ee6:	0d c0       	rjmp	.+26     	; 0xf02 <vfprintf+0x2f0>
     ee8:	fe 01       	movw	r30, r28
     eea:	ed 0d       	add	r30, r13
     eec:	f1 1d       	adc	r31, r1
     eee:	80 81       	ld	r24, Z
     ef0:	80 33       	cpi	r24, 0x30	; 48
     ef2:	19 f4       	brne	.+6      	; 0xefa <vfprintf+0x2e8>
     ef4:	99 ee       	ldi	r25, 0xE9	; 233
     ef6:	f9 22       	and	r15, r25
     ef8:	08 c0       	rjmp	.+16     	; 0xf0a <vfprintf+0x2f8>
     efa:	1f 5f       	subi	r17, 0xFF	; 255
     efc:	f2 fe       	sbrs	r15, 2
     efe:	05 c0       	rjmp	.+10     	; 0xf0a <vfprintf+0x2f8>
     f00:	03 c0       	rjmp	.+6      	; 0xf08 <vfprintf+0x2f6>
     f02:	8f 2d       	mov	r24, r15
     f04:	86 78       	andi	r24, 0x86	; 134
     f06:	09 f0       	breq	.+2      	; 0xf0a <vfprintf+0x2f8>
     f08:	1f 5f       	subi	r17, 0xFF	; 255
     f0a:	0f 2d       	mov	r16, r15
     f0c:	f3 fc       	sbrc	r15, 3
     f0e:	14 c0       	rjmp	.+40     	; 0xf38 <vfprintf+0x326>
     f10:	f0 fe       	sbrs	r15, 0
     f12:	0f c0       	rjmp	.+30     	; 0xf32 <vfprintf+0x320>
     f14:	1e 15       	cp	r17, r14
     f16:	10 f0       	brcs	.+4      	; 0xf1c <vfprintf+0x30a>
     f18:	9d 2c       	mov	r9, r13
     f1a:	0b c0       	rjmp	.+22     	; 0xf32 <vfprintf+0x320>
     f1c:	9d 2c       	mov	r9, r13
     f1e:	9e 0c       	add	r9, r14
     f20:	91 1a       	sub	r9, r17
     f22:	1e 2d       	mov	r17, r14
     f24:	06 c0       	rjmp	.+12     	; 0xf32 <vfprintf+0x320>
     f26:	80 e2       	ldi	r24, 0x20	; 32
     f28:	90 e0       	ldi	r25, 0x00	; 0
     f2a:	b3 01       	movw	r22, r6
     f2c:	0e 94 fc 07 	call	0xff8	; 0xff8 <fputc>
     f30:	1f 5f       	subi	r17, 0xFF	; 255
     f32:	1e 15       	cp	r17, r14
     f34:	c0 f3       	brcs	.-16     	; 0xf26 <vfprintf+0x314>
     f36:	04 c0       	rjmp	.+8      	; 0xf40 <vfprintf+0x32e>
     f38:	1e 15       	cp	r17, r14
     f3a:	10 f4       	brcc	.+4      	; 0xf40 <vfprintf+0x32e>
     f3c:	e1 1a       	sub	r14, r17
     f3e:	01 c0       	rjmp	.+2      	; 0xf42 <vfprintf+0x330>
     f40:	ee 24       	eor	r14, r14
     f42:	04 ff       	sbrs	r16, 4
     f44:	0f c0       	rjmp	.+30     	; 0xf64 <vfprintf+0x352>
     f46:	80 e3       	ldi	r24, 0x30	; 48
     f48:	90 e0       	ldi	r25, 0x00	; 0
     f4a:	b3 01       	movw	r22, r6
     f4c:	0e 94 fc 07 	call	0xff8	; 0xff8 <fputc>
     f50:	02 ff       	sbrs	r16, 2
     f52:	1d c0       	rjmp	.+58     	; 0xf8e <vfprintf+0x37c>
     f54:	01 fd       	sbrc	r16, 1
     f56:	03 c0       	rjmp	.+6      	; 0xf5e <vfprintf+0x34c>
     f58:	88 e7       	ldi	r24, 0x78	; 120
     f5a:	90 e0       	ldi	r25, 0x00	; 0
     f5c:	0e c0       	rjmp	.+28     	; 0xf7a <vfprintf+0x368>
     f5e:	88 e5       	ldi	r24, 0x58	; 88
     f60:	90 e0       	ldi	r25, 0x00	; 0
     f62:	0b c0       	rjmp	.+22     	; 0xf7a <vfprintf+0x368>
     f64:	80 2f       	mov	r24, r16
     f66:	86 78       	andi	r24, 0x86	; 134
     f68:	91 f0       	breq	.+36     	; 0xf8e <vfprintf+0x37c>
     f6a:	01 ff       	sbrs	r16, 1
     f6c:	02 c0       	rjmp	.+4      	; 0xf72 <vfprintf+0x360>
     f6e:	8b e2       	ldi	r24, 0x2B	; 43
     f70:	01 c0       	rjmp	.+2      	; 0xf74 <vfprintf+0x362>
     f72:	80 e2       	ldi	r24, 0x20	; 32
     f74:	f7 fc       	sbrc	r15, 7
     f76:	8d e2       	ldi	r24, 0x2D	; 45
     f78:	90 e0       	ldi	r25, 0x00	; 0
     f7a:	b3 01       	movw	r22, r6
     f7c:	0e 94 fc 07 	call	0xff8	; 0xff8 <fputc>
     f80:	06 c0       	rjmp	.+12     	; 0xf8e <vfprintf+0x37c>
     f82:	80 e3       	ldi	r24, 0x30	; 48
     f84:	90 e0       	ldi	r25, 0x00	; 0
     f86:	b3 01       	movw	r22, r6
     f88:	0e 94 fc 07 	call	0xff8	; 0xff8 <fputc>
     f8c:	9a 94       	dec	r9
     f8e:	d9 14       	cp	r13, r9
     f90:	c0 f3       	brcs	.-16     	; 0xf82 <vfprintf+0x370>
     f92:	da 94       	dec	r13
     f94:	f1 01       	movw	r30, r2
     f96:	ed 0d       	add	r30, r13
     f98:	f1 1d       	adc	r31, r1
     f9a:	80 81       	ld	r24, Z
     f9c:	90 e0       	ldi	r25, 0x00	; 0
     f9e:	b3 01       	movw	r22, r6
     fa0:	0e 94 fc 07 	call	0xff8	; 0xff8 <fputc>
     fa4:	dd 20       	and	r13, r13
     fa6:	a9 f7       	brne	.-22     	; 0xf92 <vfprintf+0x380>
     fa8:	06 c0       	rjmp	.+12     	; 0xfb6 <vfprintf+0x3a4>
     faa:	80 e2       	ldi	r24, 0x20	; 32
     fac:	90 e0       	ldi	r25, 0x00	; 0
     fae:	b3 01       	movw	r22, r6
     fb0:	0e 94 fc 07 	call	0xff8	; 0xff8 <fputc>
     fb4:	ea 94       	dec	r14
     fb6:	ee 20       	and	r14, r14
     fb8:	c1 f7       	brne	.-16     	; 0xfaa <vfprintf+0x398>
     fba:	43 ce       	rjmp	.-890    	; 0xc42 <vfprintf+0x30>
     fbc:	f3 01       	movw	r30, r6
     fbe:	66 81       	ldd	r22, Z+6	; 0x06
     fc0:	77 81       	ldd	r23, Z+7	; 0x07
     fc2:	cb 01       	movw	r24, r22
     fc4:	2b 96       	adiw	r28, 0x0b	; 11
     fc6:	e2 e1       	ldi	r30, 0x12	; 18
     fc8:	0c 94 ca 05 	jmp	0xb94	; 0xb94 <__epilogue_restores__>

00000fcc <strnlen_P>:
     fcc:	fc 01       	movw	r30, r24
     fce:	05 90       	lpm	r0, Z+
     fd0:	61 50       	subi	r22, 0x01	; 1
     fd2:	70 40       	sbci	r23, 0x00	; 0
     fd4:	01 10       	cpse	r0, r1
     fd6:	d8 f7       	brcc	.-10     	; 0xfce <strnlen_P+0x2>
     fd8:	80 95       	com	r24
     fda:	90 95       	com	r25
     fdc:	8e 0f       	add	r24, r30
     fde:	9f 1f       	adc	r25, r31
     fe0:	08 95       	ret

00000fe2 <strnlen>:
     fe2:	fc 01       	movw	r30, r24
     fe4:	61 50       	subi	r22, 0x01	; 1
     fe6:	70 40       	sbci	r23, 0x00	; 0
     fe8:	01 90       	ld	r0, Z+
     fea:	01 10       	cpse	r0, r1
     fec:	d8 f7       	brcc	.-10     	; 0xfe4 <strnlen+0x2>
     fee:	80 95       	com	r24
     ff0:	90 95       	com	r25
     ff2:	8e 0f       	add	r24, r30
     ff4:	9f 1f       	adc	r25, r31
     ff6:	08 95       	ret

00000ff8 <fputc>:
     ff8:	0f 93       	push	r16
     ffa:	1f 93       	push	r17
     ffc:	cf 93       	push	r28
     ffe:	df 93       	push	r29
    1000:	8c 01       	movw	r16, r24
    1002:	eb 01       	movw	r28, r22
    1004:	8b 81       	ldd	r24, Y+3	; 0x03
    1006:	81 ff       	sbrs	r24, 1
    1008:	1b c0       	rjmp	.+54     	; 0x1040 <fputc+0x48>
    100a:	82 ff       	sbrs	r24, 2
    100c:	0d c0       	rjmp	.+26     	; 0x1028 <fputc+0x30>
    100e:	2e 81       	ldd	r18, Y+6	; 0x06
    1010:	3f 81       	ldd	r19, Y+7	; 0x07
    1012:	8c 81       	ldd	r24, Y+4	; 0x04
    1014:	9d 81       	ldd	r25, Y+5	; 0x05
    1016:	28 17       	cp	r18, r24
    1018:	39 07       	cpc	r19, r25
    101a:	64 f4       	brge	.+24     	; 0x1034 <fputc+0x3c>
    101c:	e8 81       	ld	r30, Y
    101e:	f9 81       	ldd	r31, Y+1	; 0x01
    1020:	01 93       	st	Z+, r16
    1022:	f9 83       	std	Y+1, r31	; 0x01
    1024:	e8 83       	st	Y, r30
    1026:	06 c0       	rjmp	.+12     	; 0x1034 <fputc+0x3c>
    1028:	e8 85       	ldd	r30, Y+8	; 0x08
    102a:	f9 85       	ldd	r31, Y+9	; 0x09
    102c:	80 2f       	mov	r24, r16
    102e:	09 95       	icall
    1030:	89 2b       	or	r24, r25
    1032:	31 f4       	brne	.+12     	; 0x1040 <fputc+0x48>
    1034:	8e 81       	ldd	r24, Y+6	; 0x06
    1036:	9f 81       	ldd	r25, Y+7	; 0x07
    1038:	01 96       	adiw	r24, 0x01	; 1
    103a:	9f 83       	std	Y+7, r25	; 0x07
    103c:	8e 83       	std	Y+6, r24	; 0x06
    103e:	02 c0       	rjmp	.+4      	; 0x1044 <fputc+0x4c>
    1040:	0f ef       	ldi	r16, 0xFF	; 255
    1042:	1f ef       	ldi	r17, 0xFF	; 255
    1044:	c8 01       	movw	r24, r16
    1046:	df 91       	pop	r29
    1048:	cf 91       	pop	r28
    104a:	1f 91       	pop	r17
    104c:	0f 91       	pop	r16
    104e:	08 95       	ret

00001050 <__ultoa_invert>:
    1050:	fa 01       	movw	r30, r20
    1052:	aa 27       	eor	r26, r26
    1054:	28 30       	cpi	r18, 0x08	; 8
    1056:	51 f1       	breq	.+84     	; 0x10ac <__ultoa_invert+0x5c>
    1058:	20 31       	cpi	r18, 0x10	; 16
    105a:	81 f1       	breq	.+96     	; 0x10bc <__ultoa_invert+0x6c>
    105c:	e8 94       	clt
    105e:	6f 93       	push	r22
    1060:	6e 7f       	andi	r22, 0xFE	; 254
    1062:	6e 5f       	subi	r22, 0xFE	; 254
    1064:	7f 4f       	sbci	r23, 0xFF	; 255
    1066:	8f 4f       	sbci	r24, 0xFF	; 255
    1068:	9f 4f       	sbci	r25, 0xFF	; 255
    106a:	af 4f       	sbci	r26, 0xFF	; 255
    106c:	b1 e0       	ldi	r27, 0x01	; 1
    106e:	3e d0       	rcall	.+124    	; 0x10ec <__ultoa_invert+0x9c>
    1070:	b4 e0       	ldi	r27, 0x04	; 4
    1072:	3c d0       	rcall	.+120    	; 0x10ec <__ultoa_invert+0x9c>
    1074:	67 0f       	add	r22, r23
    1076:	78 1f       	adc	r23, r24
    1078:	89 1f       	adc	r24, r25
    107a:	9a 1f       	adc	r25, r26
    107c:	a1 1d       	adc	r26, r1
    107e:	68 0f       	add	r22, r24
    1080:	79 1f       	adc	r23, r25
    1082:	8a 1f       	adc	r24, r26
    1084:	91 1d       	adc	r25, r1
    1086:	a1 1d       	adc	r26, r1
    1088:	6a 0f       	add	r22, r26
    108a:	71 1d       	adc	r23, r1
    108c:	81 1d       	adc	r24, r1
    108e:	91 1d       	adc	r25, r1
    1090:	a1 1d       	adc	r26, r1
    1092:	20 d0       	rcall	.+64     	; 0x10d4 <__ultoa_invert+0x84>
    1094:	09 f4       	brne	.+2      	; 0x1098 <__ultoa_invert+0x48>
    1096:	68 94       	set
    1098:	3f 91       	pop	r19
    109a:	2a e0       	ldi	r18, 0x0A	; 10
    109c:	26 9f       	mul	r18, r22
    109e:	11 24       	eor	r1, r1
    10a0:	30 19       	sub	r19, r0
    10a2:	30 5d       	subi	r19, 0xD0	; 208
    10a4:	31 93       	st	Z+, r19
    10a6:	de f6       	brtc	.-74     	; 0x105e <__ultoa_invert+0xe>
    10a8:	cf 01       	movw	r24, r30
    10aa:	08 95       	ret
    10ac:	46 2f       	mov	r20, r22
    10ae:	47 70       	andi	r20, 0x07	; 7
    10b0:	40 5d       	subi	r20, 0xD0	; 208
    10b2:	41 93       	st	Z+, r20
    10b4:	b3 e0       	ldi	r27, 0x03	; 3
    10b6:	0f d0       	rcall	.+30     	; 0x10d6 <__ultoa_invert+0x86>
    10b8:	c9 f7       	brne	.-14     	; 0x10ac <__ultoa_invert+0x5c>
    10ba:	f6 cf       	rjmp	.-20     	; 0x10a8 <__ultoa_invert+0x58>
    10bc:	46 2f       	mov	r20, r22
    10be:	4f 70       	andi	r20, 0x0F	; 15
    10c0:	40 5d       	subi	r20, 0xD0	; 208
    10c2:	4a 33       	cpi	r20, 0x3A	; 58
    10c4:	18 f0       	brcs	.+6      	; 0x10cc <__ultoa_invert+0x7c>
    10c6:	49 5d       	subi	r20, 0xD9	; 217
    10c8:	31 fd       	sbrc	r19, 1
    10ca:	40 52       	subi	r20, 0x20	; 32
    10cc:	41 93       	st	Z+, r20
    10ce:	02 d0       	rcall	.+4      	; 0x10d4 <__ultoa_invert+0x84>
    10d0:	a9 f7       	brne	.-22     	; 0x10bc <__ultoa_invert+0x6c>
    10d2:	ea cf       	rjmp	.-44     	; 0x10a8 <__ultoa_invert+0x58>
    10d4:	b4 e0       	ldi	r27, 0x04	; 4
    10d6:	a6 95       	lsr	r26
    10d8:	97 95       	ror	r25
    10da:	87 95       	ror	r24
    10dc:	77 95       	ror	r23
    10de:	67 95       	ror	r22
    10e0:	ba 95       	dec	r27
    10e2:	c9 f7       	brne	.-14     	; 0x10d6 <__ultoa_invert+0x86>
    10e4:	00 97       	sbiw	r24, 0x00	; 0
    10e6:	61 05       	cpc	r22, r1
    10e8:	71 05       	cpc	r23, r1
    10ea:	08 95       	ret
    10ec:	9b 01       	movw	r18, r22
    10ee:	ac 01       	movw	r20, r24
    10f0:	0a 2e       	mov	r0, r26
    10f2:	06 94       	lsr	r0
    10f4:	57 95       	ror	r21
    10f6:	47 95       	ror	r20
    10f8:	37 95       	ror	r19
    10fa:	27 95       	ror	r18
    10fc:	ba 95       	dec	r27
    10fe:	c9 f7       	brne	.-14     	; 0x10f2 <__ultoa_invert+0xa2>
    1100:	62 0f       	add	r22, r18
    1102:	73 1f       	adc	r23, r19
    1104:	84 1f       	adc	r24, r20
    1106:	95 1f       	adc	r25, r21
    1108:	a0 1d       	adc	r26, r0
    110a:	08 95       	ret

0000110c <_exit>:
    110c:	f8 94       	cli

0000110e <__stop_program>:
    110e:	ff cf       	rjmp	.-2      	; 0x110e <__stop_program>
